&НаКлиенте
Перем глСтароеЗначениеКолонки;
&НаКлиенте
Перем глЗачеркнутыйШрифт;
&НаКлиенте
Перем глТекущийНомерСтола;
&НаКлиенте
Перем мЗакрытиеФормы;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//заполним параметры
	ПеремОбъектДокумента = ДанныеФормыВЗначение(Параметры.ОбъектДок,Тип("ДокументОбъект.ПроведениеСоревнования")); 
	ЗначениеВРеквизитФормы(ПеремОбъектДокумента,"СсылкаНаСоревнование");
	НомерТура			 = Параметры.НомерТура;
	РежимТура			 = Параметры.РежимТура;
	КолПартий			 = Параметры.КолПартий;
	ВидСоревнований = Параметры.ВидСоревнований;
	КолСтолов				= СсылкаНаСоревнование.КолСтолов;
	
	ТЧУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить();
	
	АдресТаблицаУчастников = ПоместитьВоВременноеХранилище(ТЧУчастников,ЭтотОбъект.УникальныйИдентификатор);
	АдресКопииТаблицыГрупп = ПоместитьВоВременноеХранилище(ТаблицаГруппы.Выгрузить(),ЭтотОбъект.УникальныйИдентификатор);
	
	//получим какие группы завели
	ВсегоКолГрупп = Документы.ПроведениеСоревнования.ОпределитьКоличествоГрупп(ТЧУчастников,НомерТура,РежимТура);
	УО = ЭтотОбъект.УсловноеОформление.Элементы;
	Для Гр = 1 По ВсегоКолГрупп Цикл
		СписокГрупп.Добавить(Гр,"Группа №"+Гр);
		СтрокиГруппы = ТЧУчастников.Скопировать(Новый Структура("НомерГруппы,НомерТура,РежимТура",Гр,НомерТура,РежимТура));
		К = 1;
		Для Каждого ТекСтрока Из СтрокиГруппы Цикл
			//теперь добавим условное оформление
			ЭлементУО = УО.Добавить();
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр",Истина);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.СветлоСерый);
			ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаГруппы.КолонкаИгры"+К);
			ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементУсловие.ПравоеЗначение= "X";//для черных квадратиков ЛАТ
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыКолонкаИгры"+К);
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыСписокОчков"+К);
			//для нуля скидывание значения
			ЭлементУО = УО.Добавить();
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.Белый);
			ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаГруппы.КолонкаИгры"+К);
			ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементУсловие.ПравоеЗначение= "0";//
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыКолонкаИгры"+К);
			//оформление для Проигравший
			ЭлементУО = УО.Добавить();
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(250,198,192));
			ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаГруппы.КолонкаИгры"+К);
			ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементУсловие.ПравоеЗначение= "1";//
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыКолонкаИгры"+К);
			//оформление для 2 Победитель 
			ЭлементУО = УО.Добавить();
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",Новый Цвет(219,251,198));
			ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаГруппы.КолонкаИгры"+К);
			ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементУсловие.ПравоеЗначение= "2";//
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыКолонкаИгры"+К);
			//Выделение колонки
			ЭлементУО = УО.Добавить();
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(,,Истина));
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",Новый Цвет(0,0,255));
			ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаГруппы.ВыделениеКолонки"+К);
			ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементУсловие.ПравоеЗначение= Истина;//
			ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаГруппыКолонкаИгры"+К);
			//----------
			К = К + 1;
		КонецЦикла;
	КонецЦикла;
	
	ЭтотОбъект.Заголовок = СсылкаНаСоревнование.НазваниеСоревнования + " "+Параметры.Коммент;
	                           
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",СсылкаНаСоревнование.ОбщаяТаблицаДанных.Выгрузить());
	Запрос.Выполнить();
	Текст = "ВЫБРАТЬ
	        |	*
	        |ИЗ
	        |	ТЗ КАК ТЗ
	        |ГДЕ
	        |	ТЗ.НомерТура = &НомТура
	        |	И ТЗ.РежимТура = &РежимТура";
	Запрос.УстановитьПараметр("НомТура",НомерТура);
	Запрос.УстановитьПараметр("РежимТура",РежимТура);
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(Результат,"ТаблицаОбщихДанных");
	
	АдресОбщейТаблицыДанных = ПоместитьВоВременноеХранилище(ТаблицаОбщихДанных.Выгрузить(),ЭтотОбъект.УникальныйИдентификатор);
	
	//продумать если 2 групповой, 3 групповой, нужен только 3
	Для Каждого ТекСтрока Из СсылкаНаСоревнование.ХодСоревнования Цикл
		Если ТекСтрока.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой 
			И ТекСтрока.НомерСтроки <> НомерТура Тогда
			ЗаголовокВСписке = ""+ТекСтрока.НомерСтроки+" "+НРег(ТекСтрока.Комментарий);
			СписокГрупповыхЭтапов.Добавить(ТекСтрока.НомерСтроки,ЗаголовокВСписке);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокГрупповыхЭтапов.Количество() >= 1 Тогда
		Элементы.СУчетомИгр.Видимость = Истина;
	КонецЕсли;
	СУчетомИгр = Ложь;
	ПереоткрытьФорму = Ложь;
	//устанавливаем видимость партиям
	Для Н = 1  По КолПартий Цикл
		Элементы["ТаблицаПартийИгра"+Н].Видимость = Истина;
	КонецЦикла; 
	
	СписокЗначенийВыбора = Новый СписокЗначений;
	Если КолПартий = 3 Тогда
		СписокЗначенийВыбора.Добавить("-0");
		СписокЗначенийВыбора.Добавить("-1");
		СписокЗначенийВыбора.Добавить("0");
		СписокЗначенийВыбора.Добавить("1");
		//Для пр = -1 По 1 Цикл СписокЗначенийВыбора.Добавить(пр);	КонецЦикла;
	ИначеЕсли КолПартий = 5 Тогда
		СписокЗначенийВыбора.Добавить("-0");
		СписокЗначенийВыбора.Добавить("-1");
		СписокЗначенийВыбора.Добавить("-2");
		СписокЗначенийВыбора.Добавить("0");
		СписокЗначенийВыбора.Добавить("1");
		СписокЗначенийВыбора.Добавить("2");
		//Для пр = -2 По 2 Цикл СписокЗначенийВыбора.Добавить(пр);КонецЦикла;
	ИначеЕсли КолПартий = 7 Тогда
		СписокЗначенийВыбора.Добавить("-0");
		СписокЗначенийВыбора.Добавить("-1");
		СписокЗначенийВыбора.Добавить("-2");
		СписокЗначенийВыбора.Добавить("-3");
		СписокЗначенийВыбора.Добавить("0");
		СписокЗначенийВыбора.Добавить("1");
		СписокЗначенийВыбора.Добавить("2");
		СписокЗначенийВыбора.Добавить("3");
		//Для пр = -3 По 3 Цикл СписокЗначенийВыбора.Добавить(пр);КонецЦикла;
	КонецЕсли;
	Для Каждого ТекЗначСписка Из СписокЗначенийВыбора Цикл
		Если Лев(ТекЗначСписка.Значение,1) = "-" Тогда
			ТекстПредставления = "Проиграл и выиграл "+Прав(ТекЗначСписка.Значение,1)+" парт.";
			КартинкаДлясписка = БиблиотекаКартинок.КрасныйШар;
		//ИначеЕсли ТекЗначСписка.Значение = "0"  Тогда 
		//	ТекстПредставления = "W проиграл 0 парт.";	
		//	КартинкаДлясписка = БиблиотекаКартинок.ЗеленыйШар;
		Иначе
			ТекстПредставления = "Выиграл и проиграл "+Строка(ТекЗначСписка.Значение)+" парт.";	
			КартинкаДлясписка = БиблиотекаКартинок.ЗеленыйШар;
		КонецЕсли; 
		ТекЗначСписка.Представление = ТекстПредставления;
		ТекЗначСписка.Картинка = КартинкаДлясписка;
	КонецЦикла; 
	Для Н = 1 По 25 Цикл
		КолонкаГруппы = Элементы["ТаблицаГруппыКолонкаИгры"+Н];
		Для Каждого ТекЗначДлясписка Из СписокЗначенийВыбора Цикл
			ЗаполнитьЗначенияСвойств(КолонкаГруппы.СписокВыбора.Добавить(),ТекЗначДлясписка);	
		КонецЦикла; 
	КонецЦикла;
		
КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ОСНОВНОЙ ТАБЛИЦЫ
//
&НаКлиенте
Процедура ПриАктивизацииЯчейкиТаблицы(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекЯчейка = СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"ТаблицаГруппы","");
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	ВсегоУчастниковВГруппе = ТаблицаГруппы.Количество();
	Если Найти(ТекЯчейка,"Участник") > 0 Или Найти(ТекЯчейка,"НомерУчастник") > 0 Или Найти(ТекЯчейка,"Рейтинг") > 0
		Или Найти(ТекЯчейка,"Очки") > 0 Или Найти(ТекЯчейка,"Место") > 0 Или Найти(ТекЯчейка,"СписокОчков") > 0 Тогда
		Для Каждого ТекСтрока Из ТаблицаГруппы Цикл
			ТекСтрока.ВыделениеСтроки = Ложь;
			Для М = 1 По ВсегоУчастниковВГруппе Цикл ТекСтрока["ВыделениеКолонки"+М] = Ложь;КонецЦикла;
		КонецЦикла;		
		Возврат;
	Иначе
		Для Каждого ТекСтрока Из ТаблицаГруппы Цикл
			ТекСтрока.ВыделениеСтроки = Ложь;
			Для М = 1 По ВсегоУчастниковВГруппе Цикл ТекСтрока["ВыделениеКолонки"+М] = Ложь;КонецЦикла;
		КонецЦикла;		
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные[ТекЯчейка] = "X" Тогда
		ТаблицаПартий.Очистить();  
		Возврат;
	КонецЕсли;
	//нужно заполнить таблицу
	ТаблицаПартий.Очистить();  
	//определим участников игр
	НомерТекКолонки = СтрЗаменить(ТекЯчейка,"КолонкаИгры","");
	
	ТЧДока = ТаблицаОбщихДанных;	
	ТекЗначение = Элемент.ТекущиеДанные[ТекЯчейка];
		
	Если ТекЗначение = "2" Или ТекЗначение = "" Тогда //по этой строке выигравший
		ВыигравшийИгрок	= Элемент.ТекущиеДанные.Участник;
		НомерВ						= Элемент.ТекущиеДанные.НомерУчастника;
		ПроигравшийИгрок = ТаблицаГруппы.Получить(НомерТекКолонки-1).Участник;
		НомерП						= ТаблицаГруппы.Получить(НомерТекКолонки-1).НомерУчастника;
	ИначеЕсли ТекЗначение = "1" Или ТекЗначение = "0" Тогда //тогда эта строка проигравший
		ПроигравшийИгрок = Элемент.ТекущиеДанные.Участник;
		НомерП						= Элемент.ТекущиеДанные.НомерУчастника;
		ВыигравшийИгрок  = ТаблицаГруппы.Получить(НомерТекКолонки-1).Участник;
		НомерВ						= ТаблицаГруппы.Получить(НомерТекКолонки-1).НомерУчастника;;
	КонецЕсли;
	//выделим строки жирным шрифтом
	МассивИгрока1 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ВыигравшийИгрок));
	Если МассивИгрока1.Количество() >0 Тогда
		МассивИгрока1[0]["ВыделениеСтроки"] = Истина;
		МассивИгрока1[0]["ВыделениеКолонки"+НомерП] = Истина;
	КонецЕсли;
	МассивИгрока2 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ПроигравшийИгрок));
	Если МассивИгрока2.Количество() >0 Тогда
		МассивИгрока2[0]["ВыделениеСтроки"] = Истина;
		МассивИгрока2[0]["ВыделениеКолонки"+НомерВ] = Истина;
	КонецЕсли;
	
	Если НомерВ < НомерП Тогда
		НовСтрока = ТаблицаПартий.Добавить();
		НовСтрока.Участник = ВыигравшийИгрок;
		НовСтрока.НомерУчастника = НомерВ;
		
		НовСтрока2 = ТаблицаПартий.Добавить();
		НовСтрока2.Участник = ПроигравшийИгрок;
		НовСтрока2.НомерУчастника = НомерП;
	Иначе
		НовСтрока2 = ТаблицаПартий.Добавить();
		НовСтрока2.Участник = ПроигравшийИгрок;
		НовСтрока2.НомерУчастника = НомерП;
		
		НовСтрока = ТаблицаПартий.Добавить();
		НовСтрока.Участник = ВыигравшийИгрок;
		НовСтрока.НомерУчастника = НомерВ;
	КонецЕсли;
	
	Если ТекЗначение = "" Тогда
		НовСтрока.Итог = 0;
		НовСтрока2.Итог = 0;
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",Число(НомГруппы));
	Отбор.Вставить("Выигравший",ВыигравшийИгрок);
	Отбор.Вставить("Проигравший",ПроигравшийИгрок);
	МассивОчков = ТЧДока.НайтиСтроки(Отбор);
	
	Если МассивОчков.Количество() > 1 Тогда
		Для н  = 1 По МассивОчков.Количество() Цикл
			//посчитаем очки для выигравшего
			ТекОчки = МассивОчков[н-1].КолШаров;
			Если ТекОчки < 0 Тогда //это проигравшего
				Если ТекОчки <= -11 Тогда
					ЗначВторое = -ТекОчки +2;
				Иначе
					ЗначВторое = 11;
				КонецЕсли;
				НовСтрока2["Игра"+Н] 	= ЗначВторое;
				НовСтрока["Игра"+Н] 	= -ТекОчки;
			ИначеЕсли ТекОчки = 0 Тогда
				НовСтрока2["Игра"+Н]   = ТекОчки;
				НовСтрока["Игра"+Н] 	 = 11;
			ИначеЕсли ТекОчки >= 10 Тогда //это баланс
				НовСтрока2["Игра"+Н]   = ТекОчки;
				НовСтрока["Игра"+Н] 	 = ТекОчки+2;
			ИначеЕсли ТекОчки <= 11 И ТекОчки > 0 Тогда
				НовСтрока2["Игра"+Н] 	= ТекОчки;
				НовСтрока["Игра"+Н] 	= 11;
			ИначеЕсли ТекОчки >= 11 Тогда
				НовСтрока2["Игра"+Н]  = ТекОчки;
				НовСтрока["Игра"+Н] 	= ТекОчки+2;
			КонецЕсли;
		КонецЦикла;
		ПосчитатьИтогиПартийДляТаблицы(НомГруппы);
	ИначеЕсли МассивОчков.Количество() = 1 Тогда
		//это или техническое
		СтрокаМассива = МассивОчков[0];
		ТекОчки = СтрокаМассива.КолШаров;
		Если СтрокаМассива.ТехническоеВ Или СтрокаМассива.ТехническоеП Тогда
			НовСтрока.Техническое 	 = СтрокаМассива.ТехническоеВ;
			НовСтрока2.Техническое   = СтрокаМассива.ТехническоеП;
			ПосчитатьИтогиПартийДляТаблицы(НомГруппы);
			Возврат;
		КонецЕсли;
		//или вводили по партиям
		НовСтрока.Итог 		= СтрокаМассива.ОчкиВыигравшего;
		НовСтрока2.Итог 	= СтрокаМассива.ОчкиПроигравшего;
	КонецЕсли;	
                    
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДобавленияУдаления(Элемент,Отказ)
	Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЯчейкиОсновнойТаблицы(Элемент)
	
	ТекИмяЭлемента = Элемент.Имя;    
	НомГруппыЭл = ОпределитьНомерГруппыПоЭлементу();
	НомКолонкиЭл = Число(СтрЗаменить(ТекИмяЭлемента,"ТаблицаГруппыКолонкаИгры",""));

	ТаблицаПартийПоГруппе = ТаблицаГруппы;
	ТекСтрока = Элементы.ТаблицаГруппы.ТекущиеДанные;
	
	ИндексТекСтроки 	= ТаблицаГруппы.Индекс(ТекСтрока);
	ИндексСледСтроки	= ИндексТекСтроки + 1;
	
	Если ИндексСледСтроки > ТаблицаГруппы.Количество() -1 Тогда
		ИндексСледСтроки = ТаблицаГруппы.Количество() - 1;
	КонецЕсли; 
	
	ВведенноеЗначение = ТекСтрока["КолонкаИгры"+НомКолонкиЭл];
	СколькоДолжноБытьПартий = ОпределитьКолПартий();
	
	//варианты ввода
	//мы вводим это количество всегда выигравшему
	//0,1,2,3 - это кол. партий которые участник проиграл (т.е. в итоге он выиграл)
	//Т - русская, техническое поражение
	//-0,-1,-2,-3 - это кол. партий которые участник выиграл (т.е. в итоге он проиграл)
	
	//по номеру колонки определяем вторую строчку		
	ВтораяСтрокаПроигравшего = ТаблицаПартийПоГруппе.Получить(Число(НомКолонкиЭл)-1);
	//участники
	ВыигравшийУчастник 	= ТекСтрока.Участник;
	ПроигравшийУчастник 	= ВтораяСтрокаПроигравшего.Участник;
	
	Если ВРег(ВведенноеЗначение) = "Т"  Тогда
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = 0;
		ТехВ = Ложь;
		ТехП = Истина;
		//обнуляем
		//ТекСтрока["Реквизит"+ТекИмяЭлемента] = "2";
	Иначе
		ПервыйСимвол = Сред(ВведенноеЗначение,1,1);
		Если ПервыйСимвол = "-" Тогда 
			ОтрицательноеЧисло = Истина;
		Иначе
			ОтрицательноеЧисло = Ложь;
		КонецЕсли; 
		ВведенноеЗначение = Число(ВведенноеЗначение);
		Если ВведенноеЗначение >= СколькоДолжноБытьПартий 
			Или -ВведенноеЗначение >= СколькоДолжноБытьПартий Тогда
			ДопКол = "";
			Если КолПартий = 3 Тогда
				ДопКол = "0 или 1";
			ИначеЕсли КолПартий = 5 Тогда
				ДопКол = "0,1 или 2";
			ИначеЕсли КолПартий = 7 Тогда
				ДопКол = "0,1,2 или 3";
			КонецЕсли;
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПриИзмененииЯчейкиОсновнойТаблицыЗавершение", ЭтотОбъект, Новый Структура("НомКолонкиЭл, ТекСтрока", НомКолонкиЭл, ТекСтрока)), "Количество проигранных партий может быть равно "+ДопКол);
			Возврат;
		КонецЕсли;
		//определим какое кол. партий будем ставить
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = ВведенноеЗначение;
		Если ОтрицательноеЧисло Тогда
			//нужно поменять участников
			втВыигравший = ВыигравшийУчастник;
			втПроигравший = ПроигравшийУчастник;
			втИтогВ = ИтогВ;
			втИтогП = -ВведенноеЗначение;
			//меняем все
			ВыигравшийУчастник = втПроигравший;
			ПроигравшийУчастник = втВыигравший;
			ИтогВ = втИтогВ;
			ИтогП = втИтогП;
		КонецЕсли; 
		ТехВ = Ложь;
		ТехП = Ложь;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",ВыигравшийУчастник);
	Отбор.Вставить("Проигравший",ПроигравшийУчастник);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",Число(НомГруппыЭл));
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",ПроигравшийУчастник);
		Отбор.Вставить("Проигравший",ВыигравшийУчастник);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",Число(НомГруппыЭл));
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = Число(НомГруппыЭл);
	НовСтрока.НомерСета = 0;//ТекСет.НомерСета;
	НовСтрока.Выигравший  = ВыигравшийУчастник;
	НовСтрока.Проигравший = ПроигравшийУчастник;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ИтогВ;
	НовСтрока.ОчкиПроигравшего= ИтогП;
	НовСтрока.ТехническоеВ = ТехВ;
	НовСтрока.ТехническоеП = ТехП; 
	
	//теперь найдем в таблице их игру и проставим победу и поражение
	ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(ВыигравшийУчастник,ПроигравшийУчастник,НомГруппыЭл,,ТехП);
	
	ОбновитьОчкиТаблицы(НомГруппыЭл);
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,ВыигравшийУчастник,ПроигравшийУчастник,ИтогВ,ИтогП,ТехВ,ТехП);
	ВывестиАктивностьСтолов();
	
	//теперь переходим на следующую колонку
	
	КолУчастников = ТаблицаПартийПоГруппе.Количество();
	СледНомКолонки = Число(НомКолонкиЭл)+1;
	Если СледНомКолонки <= КолУчастников Тогда
		Элементы.ТаблицаГруппы.ТекущаяСтрока = ТаблицаГруппы.Получить(ИндексТекСтроки).ПолучитьИдентификатор();
		ЭтотОбъект.ТекущийЭлемент = Элементы["ТаблицаГруппыКолонкаИгры"+СледНомКолонки];
	Иначе
		//переходим на след. строчку
		//ИндексТекСтроки = ТаблицаПартийПоГруппе.Индекс(ТекСтрока);
		Если КолУчастников > (ИндексТекСтроки+1) Тогда //переходим
			СледСтрока = ТаблицаПартийПоГруппе.Получить(ИндексТекСтроки+1); 
			Элементы.ТаблицаГруппы.ТекущаяСтрока = СледСтрока.ПолучитьИдентификатор();
			//и переходим на не занятую колонку
			ДелатьПереход = Истина;
			Если СледНомКолонки <= КолУчастников Тогда
				ДелатьПереход = Ложь;
			КонецЕсли;
			Пока ДелатьПереход Цикл
				//получаем значение первой колонки
				Для Кол = 1 По КолУчастников Цикл
					Если Не ЗначениеЗаполнено(СледСтрока["КолонкаИгры"+Кол]) Тогда
						ДелатьПереход = Ложь;
						ЭтотОбъект.ТекущийЭлемент  = Элементы["ТаблицаГруппыКолонкаИгры"+Кол];
						Прервать;
					ИначеЕсли Кол = КолУчастников Тогда
						ДелатьПереход = Ложь;
						Прервать;//все значения заполнены
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЯчейкиОсновнойТаблицыЗавершение(ДополнительныеПараметры) Экспорт
	
	НомКолонкиЭл = ДополнительныеПараметры.НомКолонкиЭл;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	ТекСтрока["КолонкаИгры"+НомКолонкиЭл] = "";

КонецПроцедуры

&НаКлиенте
Функция ОпределитьКолПартий()
	
	Если КолПартий = 3 Тогда
		ИтогСтроки = 2;
	ИначеЕсли КолПартий = 5 Тогда
		ИтогСтроки = 3;
	ИначеЕсли КолПартий = 7 Тогда
		ИтогСтроки = 4;
	КонецЕсли;
	Возврат ИтогСтроки;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОчкиТаблицы(НомГр)
	
	ТаблицаДанных = ТаблицаГруппы;
	КолКолонок = ТаблицаДанных.Количество();
	Если КолКолонок > 0 Тогда
		Для Каждого ТекСтрока Из ТаблицаДанных Цикл
			ВсегоОчков = 0;
			Для Кол = 1 По КолКолонок Цикл
				ЗначениеКолонки = ТекСтрока["КолонкаИгры"+Формат(Кол,"ЧГ=0")];
				Если ЗначениеКолонки = "X" Или ЗначениеКолонки = "Х" Или ЗначениеКолонки = "" Тогда
				Иначе
					ВсегоОчков = ВсегоОчков + Число(ЗначениеКолонки);
				КонецЕсли;
			КонецЦикла;
			//устанавливаем количество
			ТекСтрока.Очки = ВсегоОчков;
		КонецЦикла;
		////рассчитываем приблизительны места 
		//ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(ТаблицаДанных.Выгрузить().Скопировать(,"Участник"),ТаблицаОбщихДанных.Выгрузить(),НомерТура);
		//Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
		//	ИскомаяСтрока = ТаблицаДанных.НайтиСтроки(Новый Структура("Участник",ТекСтрРасчета.Участник));
		//	Если ИскомаяСтрока.Количество() > 0 Тогда
		//		ЗаполнитьЗначенияСвойств(ИскомаяСтрока[0],ТекСтрРасчета);
		//	КонецЕсли; 
		//КонецЦикла;  
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДопИнформацию(НомГруппы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ОсновнаяТЗ Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаОбщихДанных.Выгрузить());
	Запрос.Выполнить();
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы КАК НомерГруппы1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший
	|ПОМЕСТИТЬ втТЗ
	|ИЗ
	|	ОсновнаяТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы = &НомерГруппы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЗ.НомерТура,
	|	втТЗ.РежимТура,
	|	втТЗ.НомерГруппы,
	|	КОЛИЧЕСТВО(втТЗ.НомерГруппы1) КАК ВсегоСыграно
	|ИЗ
	|	втТЗ КАК втТЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	втТЗ.НомерТура,
	|	втТЗ.РежимТура,
	|	втТЗ.НомерГруппы";
	Запрос.УстановитьПараметр("НомерТура",Число(НомерТура));
	Запрос.УстановитьПараметр("НомерГруппы",Число(НомГруппы));
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		ПеремВсегоСыграно = Результат[0].ВсегоСыграно;
	Иначе
		ПеремВсегоСыграно = 0;
	КонецЕсли;	
	
	ТЗУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура,НомерГруппы",НомерТура,Число(НомГруппы)));
	КолИгроков = ТЗУчастников.Количество();
	
	ВсегоИгр = КолИгроков*(КолИгроков-1)/2;	
	//Элементы["ВсегоИгр_"+НомГруппы].Заголовок = "Всего игр: "+ВсегоИгр;
	//Элементы["Сыграно_"+НомГруппы].Заголовок = "Уже сыграно: "+ПеремВсегоСыграно;
	//Элементы["ОсталосьСыграть_"+НомГруппы].Заголовок = "Осталось: "+(ВсегоИгр-ПеремВсегоСыграно);
	
КонецПроцедуры

&НаКлиенте
Функция ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(Победитель,Проигравший,НомГруппы,УдалитьЗачеркивание = Ложь,ПроигравшийПоТехническому = Ложь)
	
	СтрокаПобедителя = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",Победитель))[0];
	СтрокаПроигравшего = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",Проигравший))[0];
	
	ДанныеПоДетализацииОчков = ПолучитьСписокОчковДляУчастников(Победитель,Проигравший,НомГруппы);
	
	//сначала поставим победителю 2 очка
	НомПроигравшего = СтрокаПроигравшего.НомерУчастника;
	//если удаляем зачеркивание значит удалили игру
	СтрокаПобедителя["КолонкаИгры"+НомПроигравшего] = ?(УдалитьЗачеркивание,"",2);
	СтрокаПобедителя["СписокОчков"+НомПроигравшего] = ДанныеПоДетализацииОчков.ДетализацияВыигравшего;
	
	НомВыигравшего = СтрокаПобедителя.НомерУчастника;
	Если ПроигравшийПоТехническому Тогда
		КолОчковДляПроигравшего = 0;
	Иначе
		КолОчковДляПроигравшего = 1;
	КонецЕсли; 
	
	СтрокаПроигравшего["КолонкаИгры"+НомВыигравшего] = ?(УдалитьЗачеркивание,"",КолОчковДляПроигравшего);
	СтрокаПроигравшего["СписокОчков"+НомВыигравшего] = ДанныеПоДетализацииОчков.ДетализацияПроигравшего;
	
	ОбновитьАдресаТаблиц();
		
КонецФункции

&НаСервере
Функция ПолучитьСписокОчковДляУчастников(мВыигравший,мПроигравший,мНомерГруппы)
	
	мОбщаяТаблицаПоТуру = ТаблицаОбщихДанных.Выгрузить(Новый Структура("НомерТура,НомерГруппы",НомерТура,Число(мНомерГруппы)));
	//ВЫИГРАВШИЙ
	//детализация по очкам или мячикам
	ДанныеДляОтбора = Новый Структура;
	ДанныеДляОтбора.Вставить("Первый",мВыигравший);
	ДанныеДляОтбора.Вставить("Второй",мПроигравший);
	ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
	ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
	Если ПараметрыДетализации.Количество() > 0 Тогда
		СтрокаДетализацииВыигравшего = ПараметрыДетализации[0].Мячики;
	Иначе
		СтрокаДетализацииВыигравшего = "";
	КонецЕсли;
	
	//ПРОИГРАВШИЙ
	ДанныеДляОтбора = Новый Структура;
	ДанныеДляОтбора.Вставить("Первый",мПроигравший);
	ДанныеДляОтбора.Вставить("Второй",мВыигравший);
	ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
	ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
	Если ПараметрыДетализации.Количество() > 0 Тогда
		СтрокаДетализации = ПараметрыДетализации[0];
		Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
			мСписокОчковПроигравшего = СтрокаДетализации.Мячики;
		Иначе
			мСписокОчковПроигравшего = ""+ПараметрыДетализации[0].ОчкиПроигравшего+" : "+ПараметрыДетализации[0].ОчкиВыигравшего;
		КонецЕсли; 
	Иначе
		мСписокОчковПроигравшего = "";
	КонецЕсли;
	
	Возврат Новый Структура("ДетализацияВыигравшего,ДетализацияПроигравшего",СтрокаДетализацииВыигравшего,мСписокОчковПроигравшего);
	
КонецФункции
 

//ПРОЦЕДУРЫ И ФУНКЦИИ ТАБЛИЦЫ ПАРТИЙ
//
&НаКлиенте
Процедура ТаблицаПартийПередНачаломИзменения(Элемент, Отказ)
	
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	ТекСтрока = Элемент.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент.Имя <> "ТаблицаПартийИтог" Тогда
		глСтароеЗначениеКолонки = ТекСтрока[СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"ТаблицаПартий","")];
		ТекЗначениеСтроки = ТекСтрока[СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"ТаблицаПартий","")];
		
		//а теперь проверим итоги может уже все проставлено
		ТаблицаШаров = ТаблицаПартий;
		ИндексСтроки =ТаблицаШаров.Индекс(ТекСтрока);
		Если ИндексСтроки = 0 Тогда
			ИндексМеняемойСтроки = 1;
		Иначе
			ИндексМеняемойСтроки = 0;
		КонецЕсли;
		СтрокаДляУстановки = ТаблицаШаров.Получить(ИндексМеняемойСтроки);
		ПерваяСтрока = ТаблицаШаров.Получить(0);
		ВтораяСтрока = ТаблицаШаров.Получить(1);
		мЗначИтога1 = ТекСтрока.Итог;
		Если мЗначИтога1 = "" Тогда
			Итог1 = 0;
		Иначе
			Итог1 =  Число(мЗначИтога1);
		КонецЕсли;
		мЗначИтога2 = СтрокаДляУстановки.Итог;
		Если мЗначИтога2 = "" Тогда
			Итог2 = 0;
		Иначе
			Итог2 = Число(мЗначИтога2);
		КонецЕсли; 
		мОтказ = Ложь;
		Если КолПартий = 3 Тогда
			Если Итог1 = 2 Или Итог2 = 2 Тогда //уже есть итог
				мОтказ = Истина;
			КонецЕсли;
		ИначеЕсли КолПартий = 5 Тогда
			Если Итог1 = 3 Или Итог2 = 3 Тогда //все данные заполненны
				мОтказ = Истина;
			КонецЕсли;
		ИначеЕсли КолПартий = 7 Тогда
			Если Итог1 = 4 Или Итог2 = 4 Тогда //все данные заполненны
				мОтказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если мОтказ И ТекЗначениеСтроки = 0 Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзменении(Элемент)
	
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	ТаблицаШаров = ТаблицаПартий;
	ТекСтрока = Элемент.Родитель.ТекущиеДанные;	
	НомКолонки = СтрЗаменить(Элемент.Имя,"ТаблицаПартийИгра","");
	ИндексСтроки = ТаблицаШаров.Индекс(ТекСтрока);
	Если ИндексСтроки = 0 Тогда
		ИндексМеняемойСтроки = 1;
	Иначе
		ИндексМеняемойСтроки = 0;
	КонецЕсли;
	СтрокаДляУстановки = ТаблицаШаров.Получить(ИндексМеняемойСтроки);
	
	ТекЗначение = ТекСтрока["Игра"+НомКолонки];
	ЗначДляУстановки = СтрокаДляУстановки["Игра"+НомКолонки];
	Если ТекЗначение >=0 Тогда
		Если ТекЗначение >= 10 Тогда
			СтрокаДляУстановки["Игра"+НомКолонки] = ТекЗначение+2;
		ИначеЕсли ТекЗначение = 0 Или ТекЗначение = 1 Тогда
			СтрокаДляУстановки["Игра"+НомКолонки] = 11;
		ИначеЕсли ТекЗначение >= 2 Или ТекЗначение <= 9 Тогда
			//все хорошо
			СтрокаДляУстановки["Игра"+НомКолонки] = 11;
		Иначе
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ТаблицаПартийПриИзмененииЗавершение1", ЭтотОбъект, Новый Структура("НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока", НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока)), "Проверьте правильность введенных очков !");
            Возврат;
		КонецЕсли;
	Иначе //ввели минусовое значение
		втТекЗнач = -ТекЗначение;//а дальше обработаем почти так же только в текущую строчку
		//устанавливаем 11 или больше, в другую это значение
		Если втТекЗнач >=0 Тогда
			Если втТекЗнач >= 10 Тогда
				ТекСтрока["Игра"+НомКолонки] = втТекЗнач+2;
				СтрокаДляУстановки["Игра"+НомКолонки] = втТекЗнач;
			ИначеЕсли втТекЗнач = 0 Или втТекЗнач = 1 Тогда
				ТекСтрока["Игра"+НомКолонки] = 11;
				СтрокаДляУстановки["Игра"+НомКолонки] = втТекЗнач;
			ИначеЕсли втТекЗнач >= 2 Или втТекЗнач <= 9 Тогда
				//все хорошо
				ТекСтрока["Игра"+НомКолонки] = 11;
				СтрокаДляУстановки["Игра"+НомКолонки] = втТекЗнач;
			Иначе
				ПоказатьПредупреждение(Новый ОписаниеОповещения("ТаблицаПартийПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока", НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока)), "Проверьте правильность введенных очков !");
                Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//секретное ))) если ввели 99, что маловероятно будет в реальной жизни, тогда скидываем значения на 0
	//для сброса значений 
	ТаблицаПартийПриИзмененииФрагмент1(НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииЗавершение1(ДополнительныеПараметры) Экспорт
	
	НомГруппы = ДополнительныеПараметры.НомГруппы;
	НомКолонки = ДополнительныеПараметры.НомКолонки;
	СтрокаДляУстановки = ДополнительныеПараметры.СтрокаДляУстановки;
	ТекЗначение = ДополнительныеПараметры.ТекЗначение;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	ТекСтрока["Игра"+НомКолонки] = глСтароеЗначениеКолонки;
	
	ТаблицаПартийПриИзмененииФрагмент1(НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииФрагмент1(Знач НомГруппы, Знач НомКолонки, Знач СтрокаДляУстановки, Знач ТекЗначение, Знач ТекСтрока)
	
	ТаблицаПартийПриИзмененииФрагмент(НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииЗавершение(ДополнительныеПараметры) Экспорт
	
	НомГруппы = ДополнительныеПараметры.НомГруппы;
	НомКолонки = ДополнительныеПараметры.НомКолонки;
	СтрокаДляУстановки = ДополнительныеПараметры.СтрокаДляУстановки;
	ТекЗначение = ДополнительныеПараметры.ТекЗначение;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	ТекСтрока["Игра"+НомКолонки] = глСтароеЗначениеКолонки;
	
	ТаблицаПартийПриИзмененииФрагмент(НомГруппы, НомКолонки, СтрокаДляУстановки, ТекЗначение, ТекСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииФрагмент(Знач НомГруппы, Знач НомКолонки, Знач СтрокаДляУстановки, Знач ТекЗначение, Знач ТекСтрока)
	
	Если ТекЗначение = 99 Тогда
		СтрокаДляУстановки["Игра"+НомКолонки] = 0;
		ТекСтрока["Игра"+НомКолонки] = 0;
	КонецЕсли;
	ПосчитатьИтогиПартийДляТаблицы(НомГруппы);
	ИзменитьДанныеВОсновнойТаблице(НомГруппы);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииИтога(Элемент)
	
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	ТаблицаШаров = ТаблицаПартий;
	ТекСтрока = Элемент.Родитель.ТекущиеДанные;	
	ИндексСтроки = ТаблицаШаров.Индекс(ТекСтрока);
	Если ИндексСтроки = 0 Тогда
		ИндексМеняемойСтроки = 1;
	Иначе
		ИндексМеняемойСтроки = 0;
	КонецЕсли;
	СтрокаДляУстановки = ТаблицаШаров.Получить(ИндексМеняемойСтроки);
	ТекЗначение = ТекСтрока.Итог;
	
	Итог1 =  Число(ТекСтрока.Итог);
	Если КолПартий = 3 Тогда
		Если Итог1 > 2 Тогда //все данные заполненны
			ТекСтрока.Итог = 0;
			Возврат;
		КонецЕсли;
	ИначеЕсли КолПартий = 5 Тогда
		Если Итог1 > 3 Тогда //все данные заполненны
			ТекСтрока.Итог = 0;
			Возврат;
		КонецЕсли;
	ИначеЕсли КолПартий = 7 Тогда
		Если Итог1 > 4 Тогда //все данные заполненны
			ТекСтрока.Итог = 0;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Итог2 = Число(СтрокаДляУстановки.Итог);
	Если Итог1 = Итог2 Тогда
		Возврат;
	КонецЕсли;
	Проверка = Ложь;
	Если КолПартий = 3 Тогда
		Если Итог1 = 2 Или Итог2 = 2 Тогда //все данные заполненны
			Проверка = Истина;
		КонецЕсли;
	ИначеЕсли КолПартий = 5 Тогда
		Если Итог1 = 3 Или Итог2 = 3 Тогда //все данные заполненны
			Проверка = Истина;
		КонецЕсли;
	ИначеЕсли КолПартий = 7 Тогда
		Если Итог1 = 4 Или Итог2 = 4 Тогда //все данные заполненны
			Проверка = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Не Проверка Тогда
		//ТекСтрока["РеквизитКолонкаИтог_"+НомГруппы] = 0;
		Возврат;
	КонецЕсли;
	//обнуляем все очки
	Для Н = 1 По КолПартий Цикл
		ТекСтрока["Игра"+Н] = 0;
		СтрокаДляУстановки["Игра"+Н] = 0;
	КонецЦикла;
	Если Итог1 > Итог2 Тогда
		перемВыигравший 		= ТекСтрока.Участник;
		стрВыигравшего			= ТекСтрока;
		
		перемПроигравший	= СтрокаДляУстановки.Участник;
		стрПроигравшего		= СтрокаДляУстановки;
		ВИтог = Итог1;
		ПИтог = Итог2;
		
		мПроигравшийСТехническим = СтрокаДляУстановки.Техническое;
	Иначе
		перемВыигравший 		= СтрокаДляУстановки.Участник;
		стрВыигравшего			= СтрокаДляУстановки;
		
		перемПроигравший	= ТекСтрока.Участник;
		стрПроигравшего		= ТекСтрока;
		ВИтог = Итог2;
		ПИтог = Итог1;
		
		мПроигравшийСТехническим = ТекСтрока.Техническое;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",перемВыигравший);
	Отбор.Вставить("Проигравший",перемПроигравший);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",Число(НомГруппы));
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",перемПроигравший);
		Отбор.Вставить("Проигравший",перемВыигравший);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",Число(НомГруппы));
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = Число(НомГруппы);
	НовСтрока.НомерСета = 0;//ТекСет.НомерСета;
	НовСтрока.Выигравший  = перемВыигравший;
	НовСтрока.Проигравший = перемПроигравший;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ВИтог;
	НовСтрока.ОчкиПроигравшего= ПИтог;
	НовСтрока.ТехническоеВ = стрВыигравшего.Техническое;
	НовСтрока.ТехническоеП = стрПроигравшего.Техническое; 
	
	//теперь найдем в таблице их игру и проставим победу и поражение
	ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(перемВыигравший,перемПроигравший,НомГруппы,,мПроигравшийСТехническим);
	ОбновитьОчкиТаблицы(НомГруппы);
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,перемВыигравший,перемПроигравший,
		ВИтог,ПИтог,стрВыигравшего.Техническое,стрПроигравшего.Техническое);
	ВывестиАктивностьСтолов();
	
КонецПроцедуры
 
&НаКлиенте
Процедура ТаблицаПартийОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	//НомГруппы = ОпределитьНомерГруппыПоЭлементу(Элемент.Родитель.Имя,Истина);
	//ТаблицаШаров = ЭтотОбъект["РеквизитТаблицаПартий_"+НомГруппы];
	//ТекСтрока = Элемент.Родитель.ТекущиеДанные;	
	//ИндексСтроки =ТаблицаШаров.Индекс(ТекСтрока);
	//Если ИндексСтроки = 0 Тогда
	//	ИндексМеняемойСтроки = 1;
	//Иначе
	//	ИндексМеняемойСтроки = 0;
	//КонецЕсли;
	//Элемент.Родитель.ТекущаяСтрока = ТаблицаШаров.Получить(ИндексМеняемойСтроки).ПолучитьИдентификатор();
	
КонецПроцедуры

//ПоИтогу - данные будут изменяться, когда меняют значение по итогам
&НаКлиенте
Процедура ИзменитьДанныеВОсновнойТаблице(НомГруппы)
	
	ПерваяСтрока = ТаблицаПартий.Получить(0);
	ВтораяСтрока = ТаблицаПартий.Получить(1);
	Итог1 =  Число(ПерваяСтрока.Итог);
	Итог2 = Число(ВтораяСтрока.Итог);
	
	ЗаписатьДанныевТаблицу = Ложь;
	Если КолПартий = 3 Тогда
		Если Итог1 = 2 Или Итог2 = 2 Тогда //все данные заполненны
			ЗаписатьДанныевТаблицу = Истина;
		КонецЕсли;
	ИначеЕсли КолПартий = 5 Тогда
		Если Итог1 = 3 Или Итог2 = 3 Тогда //все данные заполненны
			ЗаписатьДанныевТаблицу = Истина;
		КонецЕсли;
	ИначеЕсли КолПартий = 7 Тогда
		Если Итог1 = 4 Или Итог2 = 4 Тогда //все данные заполненны
			ЗаписатьДанныевТаблицу = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗаписатьДанныевТаблицу Тогда
		Возврат;
	КонецЕсли;
	перемКолПартий = Итог1+Итог2;//всего сыграно партий
	Если Итог1 > Итог2 Тогда
		перемВыигравший 		= ПерваяСтрока.Участник;
		стрВыигравшего			= ПерваяСтрока;
		
		перемПроигравший	= ВтораяСтрока.Участник;
		стрПроигравшего		= ВтораяСтрока;
		
		мПроигравшийСТехническим = ВтораяСтрока.Техническое;
	Иначе
		перемВыигравший 		= ВтораяСтрока.Участник;
		стрВыигравшего			= ВтораяСтрока;
		
		перемПроигравший	= ПерваяСтрока.Участник;
		стрПроигравшего		= ПерваяСтрока;
		
		мПроигравшийСТехническим = ПерваяСтрока.Техническое;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",перемВыигравший);
	Отбор.Вставить("Проигравший",перемПроигравший);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",Число(НомГруппы));
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",перемПроигравший);
		Отбор.Вставить("Проигравший",перемВыигравший);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",Число(НомГруппы));
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Для Н = 1 По перемКолПартий Цикл
		//проверим техническое ли это или нет
		Если стрВыигравшего.Техническое Или  стрПроигравшего.Техническое Тогда //техническое
			НовСтрока = ТЧДока.Добавить();
			НовСтрока.РежимТура = РежимТура;
			НовСтрока.НомерТура = НомерТура;
			НовСтрока.НомерГруппы = Число(НомГруппы);
			НовСтрока.НомерСета = Н;//ТекСет.НомерСета;
			НовСтрока.Выигравший  = перемВыигравший;
			НовСтрока.Проигравший = перемПроигравший;
			НовСтрока.КолШаров	   = 0;
			НовСтрока.ОчкиВыигравшего = ОпределитьКолПартий();
			НовСтрока.ОчкиПроигравшего= 0;
			НовСтрока.ТехническоеВ = стрВыигравшего.Техническое;
			НовСтрока.ТехническоеП = стрПроигравшего.Техническое; 
			//теперь найдем в таблице их игру и проставим победу и поражение
			ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(перемВыигравший,перемПроигравший,НомГруппы,,мПроигравшийСТехническим);
			Возврат;
		КонецЕсли;
		
		Знач1В= стрВыигравшего["Игра"+Н];
		Знач2П= стрПроигравшего["Игра"+Н];
		Если Знач1В = 0 И Знач2П = 0 Тогда
			Продолжить;
		КонецЕсли;
		НовСтрока = ТЧДока.Добавить();
		НовСтрока.РежимТура = РежимТура;
		НовСтрока.НомерТура = НомерТура;
		НовСтрока.НомерГруппы = Число(НомГруппы);
		НовСтрока.НомерСета = Н;//ТекСет.НомерСета;
		НовСтрока.Выигравший  = перемВыигравший;
		НовСтрока.Проигравший = перемПроигравший;
		Если Знач1В > Знач2П Тогда //первый победил
			НовСтрока.КолШаров	   = Знач2П;
			НовСтрока.ОчкиВыигравшего = 1;
			НовСтрока.ОчкиПроигравшего= 0;
		Иначе //второй победил
			НовСтрока.КолШаров	   = -Знач1В;
			НовСтрока.ОчкиВыигравшего = 0;
			НовСтрока.ОчкиПроигравшего= 1;
		КонецЕсли;
	КонецЦикла;
	//теперь найдем в таблице их игру и проставим победу и поражение
	ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(перемВыигравший,перемПроигравший,НомГруппы,,мПроигравшийСТехническим);
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,перемВыигравший,перемПроигравший,Итог1,Итог2,ПерваяСтрока.Техническое,ВтораяСтрока.Техническое);
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьИтогиПартийДляТаблицы(НомТаблицы)
	
	Если ТаблицаПартий.Количество() < 2 Тогда
		Возврат;
	КонецЕсли; 
	ПерваяСтрока 	= ТаблицаПартий.Получить(0);
	ВтораяСтрока  	= ТаблицаПартий.Получить(1);
	ИтогВыигр1 = 0;
	ИтогВыигр2 = 0;
	Если ПерваяСтрока.Техническое Тогда
		ПерваяСтрока.Итог = 0;
		ВтораяСтрока.Итог  = ОпределитьИтогПоКолПартий(КолПартий);
		Возврат;
	ИначеЕсли ВтораяСтрока.Техническое Тогда
		ПерваяСтрока.Итог = ОпределитьИтогПоКолПартий(КолПартий);
		ВтораяСтрока.Итог  = 0;
		Возврат;
	КонецЕсли;
	
	Для Н = 1 По КолПартий Цикл
		ПервоеЗначение = ПерваяСтрока["Игра"+Н];
		ВтороеЗначение = ВтораяСтрока["Игра"+Н];
		Если ПервоеЗначение = 0 И ВтороеЗначение = 0 Тогда
			Прервать;
		КонецЕсли;
		Если ПервоеЗначение <= 11 И ВтороеЗначение <= 11 Тогда
			Если ПервоеЗначение = 11 Тогда
				ИтогВыигр1 = ИтогВыигр1 +1;
			ИначеЕсли ВтороеЗначение = 11 Тогда
				ИтогВыигр2 = ИтогВыигр2 + 1;
			КонецЕсли;
		ИначеЕсли ПервоеЗначение > ВтороеЗначение Тогда //был баланс
			ИтогВыигр1 = ИтогВыигр1 + 1;
		Иначе
			ИтогВыигр2 = ИтогВыигр2 + 1;
		КонецЕсли;
	КонецЦикла;
	ПерваяСтрока.Итог = ИтогВыигр1;
	ВтораяСтрока.Итог = ИтогВыигр2;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	ТаблицаШаров = ТаблицаПартий;
	ТекСтрока = Элемент.ТекущиеДанные;	
	Если Элемент.ТекущийЭлемент.Имя = "ТаблицаПартийИтог" или Элемент.ТекущийЭлемент.Имя = "ТаблицаПартийТехническое" Тогда
		Возврат;
	КонецЕсли;
	
	НомТекСтроки =ТаблицаШаров.Индекс(ТекСтрока);
	ИмяЭлемента = Элемент.ТекущийЭлемент.Имя;	
	НомЭлемента = СтрЗаменить(ИмяЭлемента,"ТаблицаПартийИгра","");
	//Если НомТекСтроки = 0 Тогда //первая строка
	СледКолонка = Число(НомЭлемента)+1;
	Если СледКолонка > КолПартий Тогда
		Возврат;//последняя строчка
	КонецЕсли;
	Элемент.ТекущийЭлемент = Элементы["ТаблицаПартийИгра"+СледКолонка];
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийОчистка(Элемент,СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
	Если Элемент.Родитель.ТекущиеДанные.Итог = 0 Тогда
		Возврат;//нет смысла дальше что то запускать, пускай жмут там где есть значение
	КонецЕсли;
	
	Ответ = Неопределено;

	
	ПоказатьВопрос(Новый ОписаниеОповещения("ТаблицаПартийОчисткаЗавершение1", ЭтотОбъект, Новый Структура("НомГруппы, Элемент", НомГруппы, Элемент)), "Данные партии будут удалены.Вы уверены ?",РежимДиалогаВопрос.ДаНет);
	                                             
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийОчисткаЗавершение1(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	НомГруппы = ДополнительныеПараметры.НомГруппы;
	Элемент = ДополнительныеПараметры.Элемент;
	
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда //удаляем данные из общей таблицы
		ТаблицаШаров = ТаблицаПартий;
		ТекСтрока = Элемент.Родитель.ТекущиеДанные;	
		ИндексТекСтроки = ТаблицаШаров.Индекс(ТекСтрока);
		Если ИндексТекСтроки = 0 Тогда
			ВтораяСтрока = ТаблицаШаров.Получить(1);
		Иначе
			ВтораяСтрока = ТаблицаШаров.Получить(0);
		КонецЕсли;
		//надо удалить из общей таблицы эти данные
		ПервыйИгрок = ТекСтрока.Участник;
		ВторойИгрок = ВтораяСтрока.Участник;
		Отбор = Новый Структура;
		Отбор.Вставить("Выигравший",ПервыйИгрок);
		Отбор.Вставить("Проигравший",ВторойИгрок);
		Отбор.Вставить("НомерГруппы",Число(НомГруппы));
		Отбор.Вставить("НомерТура",НомерТура);
		МассивСтрока = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
		Если МассивСтрока.Количество() = 0 Тогда //не нашли пробуем еще
			Отбор = Новый Структура;
			//поменяем местами выигравшего и проигравшего
			Отбор.Вставить("Выигравший",ВторойИгрок);
			Отбор.Вставить("Проигравший",ПервыйИгрок);
			Отбор.Вставить("НомерГруппы",Число(НомГруппы));
			Отбор.Вставить("НомерТура",НомерТура);
			МассивСтрока = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
			Если МассивСтрока.Количество() = 0 Тогда
				ПоказатьПредупреждение(Новый ОписаниеОповещения("ТаблицаПартийОчисткаЗавершение", ЭтотОбъект, Новый Структура("ВтораяСтрока, ВторойИгрок, МассивСтрока, НомГруппы, ПервыйИгрок, ТекСтрока", ВтораяСтрока, ВторойИгрок, МассивСтрока, НомГруппы, ПервыйИгрок, ТекСтрока)), "Не получилось удалить данные");
				Возврат;
			Иначе
				Для Каждого ТекСтрокаМассива Из МассивСтрока Цикл
					ТаблицаОбщихДанных.Удалить(ТаблицаОбщихДанных.Индекс(ТекСтрокаМассива));
				КонецЦикла;
				ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(ВторойИгрок,ПервыйИгрок,НомГруппы,Истина);
			КонецЕсли;
		Иначе
			Для Каждого ТекСтрокаМассива Из МассивСтрока Цикл
				ТаблицаОбщихДанных.Удалить(ТаблицаОбщихДанных.Индекс(ТекСтрокаМассива));
			КонецЦикла;
			ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(ПервыйИгрок,ВторойИгрок,НомГруппы,Истина);
		КонецЕсли;
		//обнуляем значения текущей строки и второй строки
		ТаблицаПартийОчисткаФрагмент(ВтораяСтрока, ВторойИгрок, НомГруппы, ПервыйИгрок, ТекСтрока);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийОчисткаЗавершение(ДополнительныеПараметры) Экспорт
	
	ВтораяСтрока = ДополнительныеПараметры.ВтораяСтрока;
	ВторойИгрок = ДополнительныеПараметры.ВторойИгрок;
	МассивСтрока = ДополнительныеПараметры.МассивСтрока;
	НомГруппы = ДополнительныеПараметры.НомГруппы;
	ПервыйИгрок = ДополнительныеПараметры.ПервыйИгрок;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	//не получилось удалить
	
	
	ТаблицаПартийОчисткаФрагмент(ВтораяСтрока, ВторойИгрок, НомГруппы, ПервыйИгрок, ТекСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийОчисткаФрагмент(Знач ВтораяСтрока, Знач ВторойИгрок, Знач НомГруппы, Знач ПервыйИгрок, Знач ТекСтрока)
	
	Перем Н;
	
	Для Н = 1 По КолПартий Цикл
		ТекСтрока["Игра"+Н] = 0;
		ВтораяСтрока["Игра"+Н] = 0;
	КонецЦикла;                                                 
	//а теперь итоги
	ТекСтрока.Итог = 0;
	ВтораяСтрока.Итог = 0;
	ОбновитьОчкиТаблицы(НомГруппы);
	ЭтотОбъект.Модифицированность = Истина;
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,ПервыйИгрок,ВторойИгрок,0,0,Ложь,Ложь);
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПриИзмененииФлажка(Элемент)
	
	НомГруппы = ОпределитьНомерГруппыПоЭлементу();
		
	ТекДанные = Элементы.ТаблицаПартий.ТекущиеДанные;
	ТекСтрока = ТаблицаПартий.Индекс(ТекДанные);//ТекущиеДанные.ПолучитьИдентификатор();
	
	ВтораяСтрока = ?(ТекСтрока =0,ТаблицаПартий.Получить(1),ТаблицаПартий.Получить(0));
	ЗначениеСтроки = ТекДанные.Техническое;
	Если ЗначениеСтроки Тогда
		ВтораяСтрока.Техническое = Ложь;
		ТекДанные.Итог = 0;
		ИтогСтроки = ОпределитьИтогПоКолПартий(КолПартий);
		ВтораяСтрока.Итог = Число(ИтогСтроки);
	КонецЕсли;
	
	ИзменитьДанныеВОсновнойТаблице(НомГруппы);
	ОбновитьОчкиТаблицы(НомГруппы);
	Если ТекДанные.Итог > ВтораяСтрока.Итог Тогда
		перемВыигравш 	= ТекДанные.Участник;
		перемПроиграв	= ВтораяСтрока.Участник;
		перемИтог1			= ТекДанные.Итог;
		перемИтог2			= ВтораяСтрока.Итог;
		Тех1						= ТекДанные.Техническое;
		Тех2						= ВтораяСтрока.Техническое;
	Иначе
		перемВыигравш 	= ВтораяСтрока.Участник;
		перемПроиграв	= ТекДанные.Участник;
		перемИтог1			= ВтораяСтрока.Итог;
		перемИтог2			= ТекДанные.Итог;
		Тех1						= ВтораяСтрока.Техническое;
		Тех2						= ТекДанные.Техническое;
	КонецЕсли; 
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,перемВыигравш,перемПроиграв,перемИтог1,перемИтог2,Тех1,Тех2);
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьИтогПоКолПартий(парКолПартий)
	
	Если парКолПартий = 3 Тогда
		ИтогСтроки = "2";
	ИначеЕсли парКолПартий = 5 Тогда
		ИтогСтроки = "3";
	ИначеЕсли парКолПартий = 7 Тогда
		ИтогСтроки = "4";
	КонецЕсли;
	Возврат ИтогСтроки
		
КонецФункции

//ПРОЦЕДУРЫ И ФУНКЦИИ ТАБЛИЦЫ ПО ТУРАМ
//
&НаКлиенте
Процедура НачалоВыбораИзСпискаТаблицаТуров(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НомГруппы = ОпределитьНомерГруппыПоЭлементу(Элемент.Имя,Истина);
	ТекСтрока = Элемент.Родитель.ТекущиеДанные;	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекСтрока["РеквизитСчетТура1_"+НомГруппы] <> "" И 
		ТекСтрока["РеквизитСчетТура2_"+НомГруппы] <> "" Тогда
		Возврат;
	КонецЕсли;
	
	СписокСвободныхСтолов = Новый СписокЗначений;
	Для М = 1 По СсылкаНаСоревнование.КолСтолов Цикл
		СписокСвободныхСтолов.Добавить(М,,,БиблиотекаКартинок.СтолПоНастольномуТеннису);
	КонецЦикла;
	СписокЗанятыхСтолов = Серверные.ПолучитьСписокЗанятыхСтолов();
	//посмотрим какие столы заняты
	Для каждого ТекСтр Из СписокЗанятыхСтолов Цикл 
		Если ТекСтр.Значение = 0 Тогда
			Продолжить;
		КонецЕсли; 
		Искомый = СписокСвободныхСтолов.НайтиПоЗначению(ТекСтр.Значение);
		Если Искомый <> Неопределено Тогда
			СписокСвободныхСтолов.Удалить(Искомый);	
		КонецЕсли; 
	КонецЦикла; 
	Если СписокСвободныхСтолов.Количество() = 0 Тогда
		ПоказатьПредупреждение(Неопределено, "Нет свободных столов!");
		Возврат;
	КонецЕсли; 
	
	ВыбранныйСтол = Неопределено;
 
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("НачалоВыбораИзСпискаТаблицаТуровЗавершение", ЭтотОбъект, Новый Структура("НомГруппы, ТекСтрока", НомГруппы, ТекСтрока)), СписокСвободныхСтолов,Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораИзСпискаТаблицаТуровЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	НомГруппы = ДополнительныеПараметры.НомГруппы;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	ВыбранныйСтол = ВыбранныйЭлемент;
	Если ВыбранныйСтол <> Неопределено Тогда
		ТекСтрока["РеквизитНомерСтола_"+НомГруппы] = ВыбранныйСтол.Значение;
		ДанныеДляВстреч = Новый Структура;
		ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.ВладелецФормы.УникальныйИдентификатор));
		ДанныеДляВстреч.Вставить("НомерСтола", ВыбранныйСтол.Значение);
		ДанныеДляВстреч.Вставить("Участник1",ТекСтрока["РеквизитУчастникТура1_"+НомГруппы]);
		ДанныеДляВстреч.Вставить("Участник2",ТекСтрока["РеквизитУчастникТура2_"+НомГруппы]);
		Клиентские.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч);
	КонецЕсли;

КонецПроцедуры
                                                                     
&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	//все данные внесем в табличную часть документа
	Если ЭтотОбъект.Модифицированность Тогда
		//ЭтотОбъект.Закрыть();
		ЭтотОбъект.Модифицированность = Ложь;
		ОповеститьОВыборе(ТаблицаОбщихДанных);
		//ЭтотОбъект.Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьБезЗакрытия(Команда)
	
	Если ЭтотОбъект.Модифицированность Тогда
		ЭтотОбъект.ЗакрыватьПриВыборе = Ложь;
		ОповеститьОВыборе(ТаблицаОбщихДанных);
		ПоказатьОповещениеПользователя("Внимание",,"Данные таблицы успешно записаны",БиблиотекаКартинок.Информация);
		ЭтотОбъект.ЗакрыватьПриВыборе = Истина;
		ЭтотОбъект.Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте                             
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)//пока не используется
	
	//Если ИмяСобытия = "ВводОчков" Тогда
	//	//форму открывали из табличного поля
	//	ПерваяСтрока = Параметр.ТаблицаШаров.НайтиПоИдентификатору(0);
	//	ВтораяСтрока = Параметр.ТаблицаШаров.НайтиПоИдентификатору(1);
	//	Если Число(ПерваяСтрока.Итог) > Число(ВтораяСтрока.Итог) Тогда
	//		перемВыигравший 		= ПерваяСтрока.Участник;
	//		стрВыигравшего			= ПерваяСтрока;
	//		
	//		перемПроигравший	= ВтораяСтрока.Участник;
	//		стрПроигравшего		= ВтораяСтрока;
	//	Иначе
	//		перемВыигравший 		= ВтораяСтрока.Участник;
	//		стрВыигравшего			= ВтораяСтрока;
	//		
	//		перемПроигравший	= ПерваяСтрока.Участник;
	//		стрПроигравшего		= ПерваяСтрока;
	//	КонецЕсли;
	//	//теперь найдем в таблице их игру и проставим победу и поражение
	//	Если Параметр.БылиИзмененыОчки Тогда //просто перезаполним ну или заново сформируем
	//		ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(перемВыигравший,перемПроигравший,Параметр.НомГруппы);
	//		ЭтотОбъект.Модифицированность = Истина;
	//		ТЧДока = ТаблицаОбщихДанных;
	//		//попробуем найти эту пару
	//		Отбор = Новый Структура;
	//		Отбор.Вставить("Выигравший",перемВыигравший);
	//		Отбор.Вставить("Проигравший",перемПроигравший);
	//		Отбор.Вставить("НомерТура",НомерТура);
	//		Отбор.Вставить("НомерГруппы",Число(Параметр.НомГруппы));
	//		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	//		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
	//			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
	//				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
	//			КонецЦикла;
	//		КонецЕсли;
	//		Если Параметр.Технически Тогда
	//			Для Н = 1 По 3 Цикл
	//				НовСтрока = ТЧДока.Добавить();
	//				НовСтрока.РежимТура = РежимТура;
	//				НовСтрока.НомерТура = НомерТура;
	//				НовСтрока.НомерГруппы = Число(Параметр.НомГруппы);
	//				НовСтрока.НомерСета = Н;
	//				НовСтрока.Выигравший  =перемВыигравший;
	//				НовСтрока.Проигравший = перемПроигравший;
	//				НовСтрока.ОчкиВыигравшего = 1;
	//				НовСтрока.ОчкиПроигравшего= 0;
	//				НовСтрока.Техническое = Истина;
	//			КонецЦикла;
	//		Иначе
	//			Для Н = 1 По КолПартий Цикл
	//				НовСтрока = ТЧДока.Добавить();
	//				НовСтрока.РежимТура = РежимТура;
	//				НовСтрока.НомерТура = НомерТура;
	//				НовСтрока.НомерГруппы = Число(Параметр.НомГруппы);
	//				НовСтрока.НомерСета = Н;//ТекСет.НомерСета;
	//				НовСтрока.Выигравший  = перемВыигравший;
	//				НовСтрока.Проигравший = перемПроигравший;
	//				
	//				Знач1В= стрВыигравшего["Партия"+Н];
	//				Знач2П= стрПроигравшего["Партия"+Н];
	//				Если Знач1В > Знач2П Тогда //первый победил
	//					НовСтрока.КолШаров	   = Знач2П;
	//					НовСтрока.ОчкиВыигравшего = 1;
	//					НовСтрока.ОчкиПроигравшего= 0;
	//				Иначе //второй победил
	//					НовСтрока.КолШаров	   = -Знач1В;
	//					НовСтрока.ОчкиВыигравшего = 0;
	//					НовСтрока.ОчкиПроигравшего= 1;
	//				КонецЕсли;
	//			КонецЦикла;
	
	
	//Для Каждого ТекСет Из Параметр.ТаблицаШаров Цикл
				//	Если ТекСет.КолВоОчков = 0 Тогда //или не заполнен или не игрался
				//		Продолжить;
				//	КонецЕсли;
				//	НовСтрока = ТЧДока.Добавить();
				//	НовСтрока.РежимТура = РежимТура;
				//	НовСтрока.НомерТура = НомерТура;
				//	НовСтрока.НомерГруппы = Число(Параметр.НомГруппы);
				//	НовСтрока.НомерСета = ТекСет.НомерСета;
				//	НовСтрока.Выигравший  = перемВыигравший;
				//	НовСтрока.Проигравший = перемПроигравший;
				//	НовСтрока.КолШаров	   = ТекСет.КолВоОчков;
				//	Если ТекСет.КолВоОчков > 0 Тогда //это очки выигравшего
				//		НовСтрока.ОчкиВыигравшего = 1;
				//		НовСтрока.ОчкиПроигравшего= 0;
				//	Иначе
				//		НовСтрока.ОчкиВыигравшего = 0;
				//		НовСтрока.ОчкиПроигравшего= 1;
				//	КонецЕсли;
				//КонецЦикла;
	//		КонецЕсли;
	//		ОбновитьОчкиТаблицы(Параметр.НомГруппы);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	//Если ЭтотОбъект.Модифицированность Тогда
	//	Ответ = Вопрос("Данные не будут сохранены. Вы уверены что хотите закрыть форму?",РежимДиалогаВопрос.ДаНет);
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		ЭтотОбъект.Закрыть();
	//	КонецЕсли;
	//Иначе
		ЭтотОбъект.Закрыть();
	//КонецЕсли;
	
КонецПроцедуры
 
//ИмяЭлемента - строка из которой нужно выбрать данные
//ОпрГруппу - значение что нужно выбрать из Имени элемента
//ОпрНомерКолонки тоже самое что и ОпрГруппу
&НаКлиенте
Функция ОпределитьНомерГруппыПоЭлементу(ИмяЭлемента = Неопределено,ОпрГруппу = Ложь,ОпрНомерКолонки = Ложь)
	
	ТекСтрока = Элементы.СписокГрупп.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Возврат ТекСтрока.Значение;	
	Иначе
		Возврат 1;
	КонецЕсли;

	КопияИмени = ИмяЭлемента;
	Если Найти(КопияИмени,"Колонка") > 0 Тогда //это колонка таблицы
		//РеквизитТаблицы_1
		Если ОпрГруппу Тогда
			втЗнач = Общий.ВыделитьСлово(КопияИмени,"_");
			втЗнач2 = Общий.ВыделитьСлово(КопияИмени,"_");
			Возврат КопияИмени;
		ИначеЕсли ОпрНомерКолонки Тогда
			//КолонкаИгр_8_4
			//8 это номер колонки, 4 - номер группы
			втЗнач = Общий.ВыделитьСлово(КопияИмени,"_");
			//выделяем второе значение
			НомКолонки = СтрЗаменить(Общий.ВыделитьСлово(КопияИмени,"_"),"_","");
			Возврат НомКолонки;
		Иначе //определяем номер группы
			втЗнач = Общий.ВыделитьСлово(КопияИмени,"_");
			втЗнач2 = Общий.ВыделитьСлово(КопияИмени,"_");
			Возврат втЗнач2;
		КонецЕсли;
	Иначе //какой то другой элемент, там все время НомерГруппы будет последний
		//здесь только определяем номер группы
		втЗнач = Общий.ВыделитьСлово(КопияИмени,"_");
		Возврат КопияИмени;//это и будет наш номер группы
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СУчетомИгр(Команда)
	
	ТекНомерГруппы = глТекГруппа;
	ЭтапДляСУчетом = Неопределено;

	СписокГрупповыхЭтапов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("СУчетомИгрЗавершение", ЭтотОбъект), "Выберите тур для зачета игр в Группе № "+ТекНомерГруппы);
	
КонецПроцедуры

&НаКлиенте
Процедура СУчетомИгрЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ЭтапДляСУчетом = ВыбранныйЭлемент;
	Если ЭтапДляСУчетом <> Неопределено Тогда
		ДобавитьИгрыСЭтапа(ЭтапДляСУчетом.Значение);
		ЗаписатьДанные(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьИгрыСЭтапа(парНомерЭтапа)
	
	ТекНомерГруппы = глТекГруппа;
	Отбор = Новый Структура;
	Отбор.Вставить("НомерТура",парНомерЭтапа);
	ТаблицаИгрВыбранногоЭтапа = СсылкаНаСоревнование.ОбщаяТаблицаДанных.Выгрузить(Отбор);
	//дальше найдем всех участников группы и их сыгранные игры в другом этапе
	Отбор2 = Новый Структура;
	Отбор2.Вставить("НомерТура",НомерТура);
	Отбор2.Вставить("НомерГруппы",ТекНомерГруппы);
	УчастникиТура = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Отбор2);
	УчастникиТура.Свернуть("Участник");
	МассивСтрок = УчастникиТура.ВыгрузитьКолонку("Участник");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщиеДанные Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаИгрВыбранногоЭтапа);
	Запрос.Выполнить();
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерСтроки,
	|	&НомТура КАК НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	&НомГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерСета,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	Истина КАК ЗачтеннаяИграГрупповой
	|ИЗ
	|	втОбщиеДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&Списке)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&Списке)";
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Списке",МассивСтрок);
	Запрос.УстановитьПараметр("НомТура",НомерТура);
	Запрос.УстановитьПараметр("НомГруппы",ТекНомерГруппы);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		МассивСтрокПоТекущейГруппе = ТаблицаОбщихДанных.НайтиСтроки(Отбор2);
		Для каждого ТекСтр Из МассивСтрокПоТекущейГруппе Цикл
			ТаблицаОбщихДанных.Удалить(ТекСтр);
		КонецЦикла; 
		Для каждого ТекСтр Из Результат Цикл
			НовСтрока = ТаблицаОбщихДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
		КонецЦикла; 
	КонецЕсли;
	ЭтотОбъект.Модифицированность = Истина;
	СУчетомИгр = Истина;
	ПереоткрытьФорму = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеИгры(Команда)
	
	ТекНомерГруппы = глТекГруппа;
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьДанныеИгрыЗавершение", ЭтотОбъект, Новый Структура("ТекНомерГруппы", ТекНомерГруппы)), "Все игры в группе № "+ТекНомерГруппы+" будут удалены. Продолжить?",РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеИгрыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТекНомерГруппы = ДополнительныеПараметры.ТекНомерГруппы;
	
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("НомерГруппы",ТекНомерГруппы);
		Отбор.Вставить("НомерТура",НомерТура);
		МассивСтрок = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
		Для Каждого ТекСтрока Из МассивСтрок Цикл
			ТаблицаОбщихДанных.Удалить(ТекСтрока);
		КонецЦикла;
		ПереоткрытьФорму = Истина;
		ЭтотОбъект.Модифицированность = Истина;
		ЗаписатьДанные(Неопределено);
	КонецЕсли;

КонецПроцедуры
	
&НаКлиенте
Процедура КомандаБегунки(Команда)
	
	ТекНомерГруппы = глТекГруппа;
	ДанныеДляФормы = Новый Структура;
	ДанныеДляФормы.Вставить("ТабДок",ПолучитьТабличныйДокументПоБегункам(ТекНомерГруппы));
	ДанныеДляФормы.Вставить("Заголовок","Бегунки для группы № "+ТекНомерГруппы);
	ДанныеДляФормы.Вставить("Ссылка",СсылкаНаСоревнование.Ссылка);
	ОткрытьФорму("ОбщаяФорма.ФормаВыводаНаПечать",ДанныеДляФормы,ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокументПоБегункам(мНомерГруппы)
	
	ТаблицаУчастниковГруппы = ТаблицаГруппы;
	КоличествоВГруппе = ТаблицаУчастниковГруппы.Количество();
	
	ТаблицаПорядкаИгр = Документы.ПроведениеСоревнования.ПолучитьТаблицуИгрТура(КоличествоВГруппе);
	
	Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("Бегунки");
	
	ВторойБегунок 	= Макет.ПолучитьОбласть("ГоризонтальнаяОбластьБегунка | ВторойБегунок");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСлева = 0;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСправа = 0;
	
	МассивДляПечати = Новый Массив;
	СчИгр = 1;
	СЧБегунков = 0;
	Для каждого ТекСтрокаИгры Из ТаблицаПорядкаИгр Цикл
		//печатаем только те, которые полностью заполнены	
		Попытка
			ПервыйУчастникПары = ТаблицаУчастниковГруппы.Получить(ТекСтрокаИгры.Первый-1)["Участник"];
		Исключение
		    ПервыйУчастникПары = Неопределено;
		КонецПопытки; 
		Попытка
			ВторойУчастникПары = ТаблицаУчастниковГруппы.Получить(ТекСтрокаИгры.Второй-1)["Участник"];
		Исключение
		    ВторойУчастникПары = Неопределено;
		КонецПопытки; 
		Если ПервыйУчастникПары = Неопределено Или ВторойУчастникПары = Неопределено Тогда
			Продолжить; //нет смысла его печатать	
		КонецЕсли; 
		ПервыйБегунок	= Макет.ПолучитьОбласть("ГоризонтальнаяОбластьБегунка | ПервыйБегунок");
		ПервыйБегунок.Параметры.ДатаВремя 							= Формат(ТекущаяДата(),"ДФ=dd.MM.yy");
		ПервыйБегунок.Параметры.НазваниеСоревнования	= СсылкаНаСоревнование.НазваниеСоревнования;
		ПервыйБегунок.Параметры.НомУчастника1					= "";
		ПервыйБегунок.Параметры.НомУчастника2					= "";
		ПервыйБегунок.Параметры.НомерМатча						= СчИгр;
		ПервыйБегунок.Параметры.НомерТура							= ТекСтрокаИгры.НомерТура;
		ПервыйБегунок.Параметры.Участник1							= Общий.СформироватьИмяИгрока(ПервыйУчастникПары);
		ПервыйБегунок.Параметры.Участник2							= Общий.СформироватьИмяИгрока(ВторойУчастникПары);
				
		МассивДляПечати.Добавить(ПервыйБегунок);
		Если МассивДляПечати.Количество() = 2 Тогда
			Если СЧБегунков = 5 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				СЧБегунков = 0;
			КонецЕсли;
			СЧБегунков = СЧБегунков + 1;;
			ТабДок.Вывести(МассивДляПечати.Получить(0));
			ТабДок.Присоединить(МассивДляПечати.Получить(1));
			МассивДляПечати.Очистить();
		КонецЕсли;
		СчИгр = СчИгр + 1;
	КонецЦикла;
	//выводим остаток
	Если МассивДляПечати.Количество() = 1 Тогда
		ТабДок.Вывести(МассивДляПечати.Получить(0));
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗакрытиеФормы Тогда
		Если ЭтотОбъект.Модифицированность Тогда
			СтандартнаяОбработка = Ложь;
			Отказ = Истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), "Данные не будут сохранены. Вы уверены что хотите закрыть форму?",РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		мЗакрытиеФормы = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоискУчастникаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("НомерТура",НомерТура);
		ДопПараметры.Вставить("РежимТура",РежимТура);
		ДопПараметры.Вставить("Ссылка",СсылкаНаСоревнование);
		ДанныеВыбора = ПолучитьДанныеДляПоиска(Текст,ДопПараметры);
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеДляПоиска(мТекстПоиска = "",ДопПараметры)
	
	СписокДанных = Новый СписокЗначений;
	Если мТекстПоиска = "" Тогда
		Возврат СписокДанных;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втДанные ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ДопПараметры.Ссылка.УчастникиПоЖеребьевке.Выгрузить());
	Запрос.Выполнить();
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник КАК Участник
	|ИЗ
	|	втДанные КАК ПроведениеСоревнованияУчастникиПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура = &РежимТура
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник.Наименование ПОДОБНО ""%"" + &Наименование + ""%""
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы,
	|	Участник";
	Запрос.УстановитьПараметр("НомерТура",ДопПараметры.НомерТура);
	Запрос.УстановитьПараметр("РежимТура",ДопПараметры.РежимТура);
	Запрос.УстановитьПараметр("Наименование",мТекстПоиска);
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого ТекСтр Из Результат Цикл
		СписокДанных.Добавить(ТекСтр.НомерГруппы,"Группа №"+ТекСтр.НомерГруппы+" "+ТекСтр.Участник);
	КонецЦикла; 
	
	Возврат СписокДанных;
	
КонецФункции

&НаКлиенте
Процедура ПоискУчастникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Искомая = СписокГрупп.НайтиПоЗначению(Число(ВыбранноеЗначение));
	Если Искомая <> Неопределено Тогда
		Элементы.СписокГрупп.ТекущаяСтрока = Искомая.ПолучитьИдентификатор();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьПротокол(Команда)
	
	Искомая = СсылкаНаСоревнование.ХодСоревнования.НайтиСтроки(Новый Структура("НомерСтроки",НомерТура));
	Если Искомая.Количество() > 0 Тогда
		ПараметрыСтроки = Новый Структура;
		ПараметрыСтроки.Вставить("НомерСтроки",НомерТура);
		ПараметрыСтроки.Вставить("РежимТура",Искомая[0].РежимТура);
		ПараметрыСтроки.Вставить("КолПартий",Искомая[0].КолПартий);
		ПараметрыСтроки.Вставить("Комментарий",Искомая[0].Комментарий);
		ПараметрыСтроки.Вставить("СеткаНа",Искомая[0].СеткаНа);
		ОткрытьФорму("ОбщаяФорма.ФормаВыводаНаПечать",Новый Структура("ТабДок,Заголовок,Ссылка",ФормированиеТаблицГрупп(ПараметрыСтроки),Искомая[0].Комментарий,СсылкаНаСоревнование.Ссылка),ЭтотОбъект,Новый УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно);
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Функция ФормированиеТаблицГрупп(парСтроки)
		
	мДокОбъектЗнач = РеквизитФормыВЗначение("СсылкаНаСоревнование");
	мДокОбъект = мДокОбъектЗнач.Скопировать();
	мДокОбъект.ОбщаяТаблицаДанных.Очистить();
	Для каждого ТекСтр Из ТаблицаОбщихДанных Цикл
		ЗаполнитьЗначенияСвойств(мДокОбъект.ОбщаяТаблицаДанных.Добавить(),ТекСтр);
	КонецЦикла; 
	
	Возврат Документы.ПроведениеСоревнования.ФормированиеТаблицГрупп(парСтроки,Истина,мДокОбъект);
	
КонецФункции

&НаКлиенте
Процедура СписокГруппПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = Элементы.СписокГрупп.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ЗаполнитьТаблицуПоНомеруГруппы(ТекСтрока.Значение);	
	КонецЕсли;
	Если СписокГрупп.Количество() > 1 Тогда
		ПодключитьОбработчикОжидания("ФильтроватьТаблицуМониторинга",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтроватьТаблицуМониторинга()
	
	Элементы.ТаблицаМониторинга.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерГруппы",глТекГруппа);		
	
КонецПроцедуры
 
&НаКлиенте
Процедура ЗаполнитьТаблицуПоНомеруГруппы(парНомерГруппы)
	
	глТекГруппа = парНомерГруппы;
	Данные = Новый Структура;
	Данные.Вставить("НомГруппы",парНомерГруппы);
	Данные.Вставить("НомерТура",НомерТура);
	Данные.Вставить("РежимТура",РежимТура);
	Данные.Вставить("АдресОбщейТаблицыДанных",АдресОбщейТаблицыДанных);
	Данные.Вставить("АдресТаблицаУчастников",АдресТаблицаУчастников);
	Данные.Вставить("АдресКопииТаблицыГрупп",АдресКопииТаблицыГрупп);
	ДляЗаполнения = ДобавитьДанныеДляФормы(Данные);
	ТаблицаГруппы.Очистить();
	Для каждого ТекСтр Из ДляЗаполнения Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаГруппы.Добавить(),ТекСтр);
	КонецЦикла;
	Для Н = 1 По ТаблицаГруппы.Количество() Цикл
		Элементы["ТаблицаГруппыГруппа"+Формат(Н, "ЧГ=0")].Видимость = Истина;
	КонецЦикла; 
	Для П = ТаблицаГруппы.Количество()+1 По 25 Цикл
		Элементы["ТаблицаГруппыГруппа"+Формат(Н, "ЧГ=0")].Видимость = Ложь;
	КонецЦикла;

КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ДобавитьДанныеДляФормы(ДанныеДляПолучения)
	
	ТЧДока = ПолучитьИзВременногоХранилища(ДанныеДляПолучения.АдресОбщейТаблицыДанных);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ВсяТаблица ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТЧДока);
	Запрос.Выполнить();
	Запрос.УстановитьПараметр("НомГруппы",Число(ДанныеДляПолучения.НомГруппы));
	Ном = 1;
	ПеремВсегоСыграно = 0;
	
	НомГруппы 	= Число(ДанныеДляПолучения.НомГруппы);
	НомерТура	= Число(ДанныеДляПолучения.НомерТура);
	
	АдресКопияТаблицы = ПолучитьИзВременногоХранилища(ДанныеДляПолучения.АдресКопииТаблицыГрупп);
	ТаблицаГруппы = АдресКопияТаблицы.СкопироватьКолонки();
	
	ТЧУчастников = ПолучитьИзВременногоХранилища(ДанныеДляПолучения.АдресТаблицаУчастников);
	ИсходныеСтроки = ТЧУчастников.Скопировать(Новый Структура("НомерГруппы,НомерТура,РежимТура",ДанныеДляПолучения.НомГруппы,ДанныеДляПолучения.НомерТура,ДанныеДляПолучения.РежимТура));
	
	Ном = 1;
	ПеремВсегоСыграно = 0;
	
	//добавляем в строки туров игры
	КолУчастников = ИсходныеСтроки.Количество();
	КолИгр = 0;
	Если КолУчастников <= 4  Тогда
		КолИгр = 3;	
	ИначеЕсли КолУчастников > 4 И КолУчастников <= 6 Тогда
		КолИгр = 5;	
	ИначеЕсли КолУчастников > 6 И КолУчастников <= 8 Тогда
		КолИгр = 7;	
	ИначеЕсли КолУчастников > 8 И КолУчастников <= 10 Тогда
		КолИгр = 9;	
	ИначеЕсли КолУчастников > 9 И КолУчастников <= 12 Тогда
		КолИгр = 11;
	КонецЕсли;
	
	 //подготовим таблицу исходных игроков
	 мИсходныеСтроки = ИсходныеСтроки.Скопировать(,"Участник,НомерСтроки");
	 Сч = 1 ;
	 Для Каждого ТекСтрока Из мИсходныеСтроки Цикл
		 ТекСтрока.НомерСтроки = Сч;
		 Сч = Сч + 1;
	 КонецЦикла;
	 
	 мОбщаяТаблицаПоТуру = ТЧДока.Скопировать(Новый Структура("НомерТура,НомерГруппы",НомерТура,НомГруппы));
	 
	 //а теперь все остальные игры
	 Для Каждого ТекСтрока Из ИсходныеСтроки Цикл
		НовСтрока = ТаблицаГруппы.Добавить();
		НовСтрока.НомерУчастника = Ном;
		НовСтрока.Участник = ТекСтрока.Участник;
		НовСтрока.РейтингУчастника = ТекСтрока.ТекущийРейтинг;
		НовСтрока["КолонкаИгры"+Ном] = "X";// за место "X" ячейка будет закрашена  ЛАТ
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ВсяТаблица.НомерТура,
		|	ВсяТаблица.НомерГруппы,
		|	ВсяТаблица.Выигравший,
		|	0 КАК НомерВТаблицеВыигр,
		|	ВсяТаблица.Проигравший,
		|	0 КАК НомерВТаблицеПроигр,
		|	СУММА(ВсяТаблица.ОчкиВыигравшего) КАК ОчкиВыигравшего,
		|	СУММА(ВсяТаблица.ОчкиПроигравшего) КАК ОчкиПроигравшего,
		|	ВсяТаблица.ТехническоеВ,
		|	ВсяТаблица.ТехническоеП
		|ИЗ
		|	ВсяТаблица КАК ВсяТаблица
		|ГДЕ
		|	ВсяТаблица.НомерТура = &НомерТура
		|	И ВсяТаблица.НомерГруппы = &НомГруппы
		|	И (ВсяТаблица.Выигравший = &Участник
		|			ИЛИ ВсяТаблица.Проигравший = &Участник)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсяТаблица.НомерГруппы,
		|	ВсяТаблица.Выигравший,
		|	ВсяТаблица.Проигравший,
		|	ВсяТаблица.НомерТура,
		|	ВсяТаблица.ТехническоеВ,
		|	ВсяТаблица.ТехническоеП";
		Запрос.УстановитьПараметр("Участник",ТекСтрока.Участник);
		Запрос.УстановитьПараметр("НомерТура",НомерТура);
		Результат = Запрос.Выполнить().Выгрузить();
		Если Результат.Количество() > 0 Тогда //есть данные по участнику
			ВсегоОчков = 0;
			//сначала проставим выигравшие позиции
			 СтрокиВыигрыша = Результат.НайтиСтроки(Новый Структура("Выигравший",ТекСтрока.Участник));
			 Если СтрокиВыигрыша.Количество() > 0 Тогда //у кого то выиграл молодец
				 Для Каждого ТекИгрок Из СтрокиВыигрыша Цикл
					 //узнаем номер колонки что бы поставить значение
					 СтрокаПоиска = ИсходныеСтроки.Найти(ТекИгрок.Проигравший);
					 Если СтрокаПоиска <> Неопределено Тогда
						 НомКолонки   = ИсходныеСтроки.Индекс(СтрокаПоиска)+1;
						 НовСтрока["КолонкаИгры"+НомКолонки] = "2";
						 ВсегоОчков = ВсегоОчков + 2;
						 //детализация по очкам или мячикам
						 ДанныеДляОтбора = Новый Структура;
						 ДанныеДляОтбора.Вставить("Первый",ТекСтрока.Участник);
						 ДанныеДляОтбора.Вставить("Второй",ТекИгрок.Проигравший);
						 ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
						 ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
						 Если ПараметрыДетализации.Количество() > 0 Тогда
						 	СтрокаДетализации = ПараметрыДетализации[0].Мячики;
						 Иначе
						 	СтрокаДетализации = "";
						КонецЕсли;
						НовСтрока["СписокОчков"+НомКолонки] = СтрокаДетализации;
					 КонецЕсли;
				 КонецЦикла;
			 КонецЕсли;
			 
			 СтрокиПроигрыша = Результат.НайтиСтроки(Новый Структура("Проигравший",ТекСтрока.Участник));
			 Если СтрокиПроигрыша.Количество() > 0 Тогда
				 Для Каждого ТекИгрок Из СтрокиПроигрыша Цикл
					 //узнаем номер колонки что бы поставить значение
					 СтрокаПоиска = ИсходныеСтроки.Найти(ТекИгрок.Выигравший);
					 Если СтрокаПоиска <> Неопределено Тогда
						 НомКолонки   = ИсходныеСтроки.Индекс(СтрокаПоиска)+1;
						 Если ТекИгрок.ТехническоеП Тогда
							 НовСтрока["КолонкаИгры"+НомКолонки] = "0";
							 ВсегоОчков = ВсегоОчков + 0;
						 Иначе
							 НовСтрока["КолонкаИгры"+НомКолонки] = "1";
							 ВсегоОчков = ВсегоОчков + 1;
						 КонецЕсли;
						 //детализация по очкам или мячикам
						 ДанныеДляОтбора = Новый Структура;
						 ДанныеДляОтбора.Вставить("Первый",ТекСтрока.Участник);
						 ДанныеДляОтбора.Вставить("Второй",ТекИгрок.Выигравший);
						 ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
						 ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
						 Если ПараметрыДетализации.Количество() > 0 Тогда
							 СтрокаДетализации = ПараметрыДетализации[0];
							 Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
								 мСписокОчков = СтрокаДетализации.Мячики;
							 Иначе
								 мСписокОчков = ""+ПараметрыДетализации[0].ОчкиПроигравшего+" : "+ПараметрыДетализации[0].ОчкиВыигравшего;
							 КонецЕсли; 
						 Иначе
							 мСписокОчков = "";
						 КонецЕсли;
						 НовСтрока["СписокОчков"+НомКолонки] = мСписокОчков;
					 КонецЕсли;
				 КонецЦикла;
			 КонецЕсли;
			 НовСтрока.Очки = ВсегоОчков;
		 КонецЕсли;
		 Ном = Ном + 1;
	 КонецЦикла;
	 
	 //РАСЧЕТ МЕСТ
	 КолКолонок = ТаблицаГруппы.Количество();
	 Если КолКолонок > 0 Тогда
		 КопияУчастников = ТаблицаГруппы.Скопировать(,"Участник");
		 // рассчитываем приблизительны места 
		 ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(КопияУчастников,мОбщаяТаблицаПоТуру,НомерТура);
		 Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
			 ИскомаяСтрока = ТаблицаГруппы.Найти(ТекСтрРасчета.Участник,"Участник");
			 Если ИскомаяСтрока <> Неопределено Тогда
			 	ИскомаяСтрока.Очки 	= ТекСтрРасчета.Очки;
				ИскомаяСтрока.Место	= ТекСтрРасчета.Место;
			 КонецЕсли; 
		 КонецЦикла;  
	 КонецЕсли; 
	 
	 Возврат Серверные.ТаблицаЗначенийВМассив(ТаблицаГруппы);
	 	 
 КонецФункции
 
&НаКлиенте
Процедура ОбновитьАдресаТаблиц()
	
	ДанныеПоАдресам = ОбновитьАдресаТаблицНаСервере(ТаблицаОбщихДанных,ТаблицаГруппы,ЭтотОбъект.УникальныйИдентификатор);
	АдресОбщейТаблицыДанных		= ДанныеПоАдресам.АдресОбщейТаблицыДанных;
	АдресКопииТаблицыГрупп			= ДанныеПоАдресам.АдресКопииТаблицыГрупп;
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ОбновитьАдресаТаблицНаСервере(Знач ВсяТаблицаОбщихДанных,Знач ТаблицаГруппы,Уник)
	
	АдресОбщейТаблицыДанных	= ПоместитьВоВременноеХранилище(ВсяТаблицаОбщихДанных.Выгрузить(),Уник);
	АдресКопииТаблицыГрупп		= ПоместитьВоВременноеХранилище(ТаблицаГруппы.Выгрузить(),Уник);	
	Данные = Новый Структура;
	Данные.Вставить("АдресОбщейТаблицыДанных",АдресОбщейТаблицыДанных);
	Данные.Вставить("АдресКопииТаблицыГрупп",АдресКопииТаблицыГрупп);
	Возврат Данные;
	
КонецФункции

//МОНИТОРИНГ----------------------

&НаСервере
Процедура ЗаполнитьМониторинг()
	
	ТаблицаМониторинга.Очистить();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втУчастники ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить());
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник КАК Участник,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.ТекущийРейтинг КАК Рейтинг
	|ИЗ
	|	втУчастники КАК ПроведениеСоревнованияУчастникиПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерСтроки";
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	ТаблицаСНомерамиТуров = Запрос.Выполнить().Выгрузить();
	
	мНомераГрупп = ТаблицаСНомерамиТуров.Скопировать(,"НомерГруппы");
	мНомераГрупп.Свернуть("НомерГруппы");
	Сч = 1;	
	
	КопияУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура),"НомерСтроки,Участник,НомерГруппы");
	СчУч = 1;
	СчГр = 1;
	Для Каждого ТекСтр Из КопияУчастников Цикл
		Если ТекСтр.НомерГруппы = СчГр Тогда
			ТекСтр.НомерСтроки = СчУч;
			СчУч = СчУч +1;
		Иначе
			СчГр = ТекСтр.НомерГруппы;
			СчУч = 1;
			ТекСтр.НомерСтроки = СчУч;
			СчУч = СчУч +1;
		КонецЕсли; 
	КонецЦикла; 
		
	Для каждого СтрТекНомерГруппы Из мНомераГрупп Цикл
		УчастникиГруппыПоНомеру = ТаблицаСНомерамиТуров.Скопировать(Новый Структура("НомерГруппы",СтрТекНомерГруппы.НомерГруппы));
		ТаблицаСПорядковымиИграми = Документы.ПроведениеСоревнования.ПолучитьТаблицуИгрТура(УчастникиГруппыПоНомеру.Количество());
		Для каждого ТекИгра Из ТаблицаСПорядковымиИграми Цикл
			Попытка
				ПервыйУчастник	= УчастникиГруппыПоНомеру.Получить(ТекИгра.Первый-1);
			Исключение
			    ПервыйУчастник 	= Неопределено;
			КонецПопытки; 
			Попытка
				ВторойУчастник		= УчастникиГруппыПоНомеру.Получить(ТекИгра.Второй-1);
			Исключение
			    ВторойУчастник 		= Неопределено;
			КонецПопытки; 
			
			Если ПервыйУчастник <> Неопределено И ВторойУчастник <> Неопределено Тогда
				мНомерВГруппе1 	= КопияУчастников.Найти(ПервыйУчастник.Участник).НомерСтроки;
				мНомерВГруппе2	= КопияУчастников.Найти(ВторойУчастник.Участник).НомерСтроки;
			
				НовСтрока = ТаблицаМониторинга.Добавить();
				НовСтрока.НомерГруппы	= СтрТекНомерГруппы.НомерГруппы;
				//порядок вызова
				НовСтрока.НомерИгры		=	ТекИгра.НомерТура;
				//НовСтрока.ПриоритетВызова	=
				Если ПервыйУчастник.Рейтинг > ВторойУчастник.Рейтинг Тогда
					НовСтрока.Участник1			= ПервыйУчастник.Участник;
					НовСтрока.Рейтинг1				= ПервыйУчастник.Рейтинг;
					НовСтрока.НомерВГруппе1	= мНомерВГруппе1;
					НовСтрока.Участник2			= ВторойУчастник.Участник;
					НовСтрока.Рейтинг2				= ВторойУчастник.Рейтинг;
					НовСтрока.НомерВГруппе2	= мНомерВГруппе2;
				Иначе
					НовСтрока.Участник2			= ПервыйУчастник.Участник;
					НовСтрока.Рейтинг2				= ПервыйУчастник.Рейтинг;
					НовСтрока.НомерВГруппе2	= мНомерВГруппе1;
					НовСтрока.Участник1			= ВторойУчастник.Участник;
					НовСтрока.Рейтинг1				= ВторойУчастник.Рейтинг;
					НовСтрока.НомерВГруппе1	= мНомерВГруппе2;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	ЗаполнитьТаблицуМониторингаИграми();
	
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуМониторингаИграми()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТаблицаОбщихДанных ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаОбщихДанных.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура КАК НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура КАК РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ИЗ
	|	втТаблицаОбщихДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = &РежимТура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТура,
	|	РежимТура,
	|	НомерГруппы";
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	Запрос.УстановитьПараметр("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого ТекСтр Из Результат Цикл
		ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,
			ТекСтр.Выигравший,
			ТекСтр.Проигравший,
		    ТекСтр.ОчкиВыигравшего,
			ТекСтр.ОчкиПроигравшего,
			ТекСтр.ТехническоеВ,
			ТекСтр.ТехническоеП);
	КонецЦикла;
	ВывестиАктивностьСтолов();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,мУчастник1,мУчастник2,мОчки1,мОчки2,ТехВ,ТехП)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Участник1",мУчастник1);
	Отбор.Вставить("Участник2",мУчастник2);
	ИскомаяСтрока = ТаблицаМониторинга.НайтиСтроки(Отбор);
	Если ИскомаяСтрока.Количество() > 0 Тогда
		СтрокаМониторинга = ИскомаяСтрока[0];
		СтрокаМониторинга.Очки1					= мОчки1;
		СтрокаМониторинга.Очки2					= мОчки2;
		СтрокаМониторинга.ТехническоеВ	= ТехВ;
		СтрокаМониторинга.ТехническоеП	= ТехП;
		СтрокаМониторинга.НомерСтола = 0;
		СтрокаМониторинга.ВремяВызова = Дата('00010101');
		СтрокаМониторинга.ПрошлоСекунд = 0;
		СтрокаМониторинга.СколькоВремениПрошло = "";
	Иначе
		Отбор = Новый Структура;
		Отбор.Вставить("Участник2",мУчастник1);
		Отбор.Вставить("Участник1",мУчастник2);
		ИскомаяСтрока = ТаблицаМониторинга.НайтиСтроки(Отбор);
		Если ИскомаяСтрока.Количество() > 0 Тогда
			СтрокаМониторинга = ИскомаяСтрока[0];
			СтрокаМониторинга.Очки1					= мОчки1;
			СтрокаМониторинга.Очки2					= мОчки2;
			СтрокаМониторинга.ТехническоеВ	= ТехП;
			СтрокаМониторинга.ТехническоеП	= ТехВ;
			СтрокаМониторинга.НомерСтола = 0;
			СтрокаМониторинга.ВремяВызова = Дата('00010101');
			СтрокаМониторинга.ПрошлоСекунд = 0;
			СтрокаМониторинга.СколькоВремениПрошло = "";
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьВремяВызоваПоСтрокам()
	
	Для каждого ТекСтол Из ТаблицаМониторинга Цикл РассчитатьСтрокуСоВременем(ТекСтол); КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтрокуСоВременем(ТекСтрокаСтола)
	
	Если ТекСтрокаСтола.ВремяВызова <> Дата('00010101') Тогда
		ТекСтрокаСтола.ПрошлоСекунд = ТекСтрокаСтола.ПрошлоСекунд + 1;
		ТекСтрокаСтола.СколькоВремениПрошло = Общий.ОбработатьСекундыНаВремя(ТекСтрокаСтола.ПрошлоСекунд);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мЗакрытиеФормы = Истина;
	ПодключитьОбработчикОжидания("ПосчитатьВремяВызоваПоСтрокам",1);
	Если СписокГрупп.Количество() = 1 Тогда
		Элементы.СписокГрупп.Видимость = Ложь;
		ЗаполнитьТаблицуПоНомеруГруппы(1);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаНомерСтолаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрокаМониторинга = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрокаМониторинга = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	Если ТекСтрокаМониторинга.Очки1 > 0 Или ТекСтрокаМониторинга.Очки2 > 0 Тогда
		Возврат;
	КонецЕсли; 
	
	//проверим по каждому участнику не вызван ли он уже
	Проверка1_1 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник1",ТекСтрокаМониторинга.Участник1)));
	Проверка1_2 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник1)));
	
	Проверка2_1 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник2)));
	Проверка2_2 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник2)));
	
	Если Проверка1_1 Или Проверка1_2 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.ИдентификаторНазначения = ЭтотОбъект.УникальныйИдентификатор;
		Сообщение.Текст = "Участник "+ТекСтрокаМониторинга.Участник1 + " уже вызыван за стол !";
		Сообщение.Сообщить(); 
	КонецЕсли; 
	Если Проверка2_1 Или Проверка2_2 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.ИдентификаторНазначения = ЭтотОбъект.УникальныйИдентификатор;
		Сообщение.Текст = "Участник "+ТекСтрокаМониторинга.Участник2 + " уже вызыван за стол !";
		Сообщение.Сообщить(); 
	КонецЕсли; 
	
	//только когда все проверки в ЛОЖЬ, тогда можно взывать за стол
	Если Проверка1_1 = Ложь И Проверка1_2 = Ложь 
		И Проверка2_1 = Ложь И Проверка2_2 = Ложь Тогда
		СписокСвободныхСтолов = Новый СписокЗначений;
		Для М = 1 По КолСтолов Цикл
			СписокСвободныхСтолов.Добавить(М,"Стол № "+М);
		КонецЦикла;
		//посмотрим какие столы заняты
		Для каждого ТекСтр Из ТаблицаМониторинга Цикл 
			Если ТекСтр.НомерСтола = 0 Тогда
				Продолжить;
			КонецЕсли; 
			Искомый = СписокСвободныхСтолов.НайтиПоЗначению(ТекСтр.НомерСтола);
			Если Искомый <> Неопределено Тогда
				СписокСвободныхСтолов.Удалить(Искомый);	
			КонецЕсли; 
		КонецЦикла; 
		Если СписокСвободныхСтолов.Количество() = 0 Тогда
			ПоказатьПредупреждение(Неопределено, "Нет свободных столов!");
			Возврат;
		КонецЕсли; 
		
		ВыбранныйСтол = Неопределено;
		
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ТаблицаМониторингаНомерСтолаНачалоВыбораИзСпискаЗавершение", ЭтотОбъект, Новый Структура("ТекСтрокаМониторинга", ТекСтрокаМониторинга)), СписокСвободныхСтолов,Элемент);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьУчастникаНаВызовПоМониторингу(СтрокиМониторинга)
	
	УчастникВИгре = Ложь;
	
	Для Каждого ТекСтр Из СтрокиМониторинга Цикл
		Если ТекСтр.Очки1 = 0 И ТекСтр.Очки2 = 0 И ТекСтр.НомерСтола > 0 Тогда //вызван за стол и играет
			УчастникВИгре = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат УчастникВИгре;
	
КонецФункции
 
&НаКлиенте
Процедура ТаблицаМониторингаНомерСтолаНачалоВыбораИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ТекСтрокаМониторинга = ДополнительныеПараметры.ТекСтрокаМониторинга;
	
	ВыбранныйСтол = ВыбранныйЭлемент;
	Если ВыбранныйСтол <> Неопределено Тогда
		//	ТекСтрокаМониторинга.Участник1 = Элементы.ТаблицаМониторинга.ТекущиеДанные.Участник1;
		//	ТекСтрокаМониторинга.Участник2 = ВторойИгрокТабл;
		ТекСтрокаМониторинга.НомерСтола = ВыбранныйСтол.Значение;
		ТекСтрокаМониторинга.ВремяВызова = ТекущаяДата();
		ДанныеДляВстреч = Новый Структура;
		ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
		ДанныеДляВстреч.Вставить("НомерСтола", ВыбранныйСтол.Значение);
		ДанныеДляВстреч.Вставить("Участник1",ТекСтрокаМониторинга.Участник1);
		ДанныеДляВстреч.Вставить("Участник2",ТекСтрокаМониторинга.Участник2);
		Клиентские.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч);
		ВывестиАктивностьСтолов();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуМониторинга(мНомерГруппы,НомерПорядковойИгры)
	
	//теперь очистим игру в таблице столов если она там есть
	МассивСтрокВТаблицеСтолов = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерИгры,НомерГруппы",НомерПорядковойИгры,мНомерГруппы));
	Если МассивСтрокВТаблицеСтолов.Количество() > 0 Тогда
		//освобождаем стол
		СтрокаТаблицы = МассивСтрокВТаблицеСтолов[0];
		//СтрокаТаблицы.Участник1 = Неопределено;
		//СтрокаТаблицы.Участник2 = Неопределено;
		//СтрокаТаблицы.НомерИгры = 0;
		СтрокаТаблицы.НомерСтола = 0;
		СтрокаТаблицы.ВремяВызова = Дата('00010101');
		СтрокаТаблицы.ПрошлоСекунд = 0;
		СтрокаТаблицы.СколькоВремениПрошло = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСкрытьСписокИгр(Команда)
	Если Элементы.ТаблицаМониторинга.Видимость Тогда
		Элементы.ТаблицаМониторинга.Видимость = Ложь;
		Элементы.АктивностьСтолов.Видимость = Ложь;
	Иначе
		Элементы.ТаблицаМониторинга.Видимость = Истина;
		Элементы.АктивностьСтолов.Видимость = Истина;
		ЗаполнитьМониторинг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаОчки1ПриИзменении(Элемент)

	//ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	//Если ТекСтрока <> Неопределено Тогда
	//	
	//	Если ТекСтрока.Очки1 > ТекСтрока.Очки2 Тогда
	//		Искомый1 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ТекСтрока.Участник1));
	//		Если Искомый1.Количество() > 0 Тогда
	//			УчастникВыигравший 	= Искомый1[0].Участник;
	//			НомерУчастника1			= Искомый1[0].НомерУчастника;
	//		КонецЕсли; 
	//		Искомый2 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ТекСтрока.Участник2));
	//		Если Искомый2.Количество() > 0 Тогда
	//			УчастникВЫигравший 	= Искомый1[0].Участник;
	//			НомерУчастника1			= Искомый1[0].НомерУчастника;
	//		КонецЕсли; 
	//	Иначе
	//		
	//	КонецЕсли; 
	//	
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаПриАктивизацииСтроки(Элемент)
	
	ТекСтрокаМониторинга = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрокаМониторинга <> Неопределено Тогда
		Искомый1 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ТекСтрокаМониторинга.Участник1));
		Если Искомый1.Количество() > 0 Тогда
			Участник1						 	= Искомый1[0].Участник;
			НомерУчастника1			= Искомый1[0].НомерУчастника;
		КонецЕсли; 
		Искомый2 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ТекСтрокаМониторинга.Участник2));
		Если Искомый2.Количество() > 0 Тогда
			Участник2 						= Искомый2[0].Участник;
			НомерУчастника2			= Искомый2[0].НомерУчастника;
		КонецЕсли; 
		
		НомГруппы = ОпределитьНомерГруппыПоЭлементу();
		ВсегоУчастниковВГруппе = ТаблицаГруппы.Количество();
		Для Каждого ТекСтрока Из ТаблицаГруппы Цикл
			ТекСтрока.ВыделениеСтроки = Ложь;
			Для М = 1 По ВсегоУчастниковВГруппе Цикл ТекСтрока["ВыделениеКолонки"+М] = Ложь;КонецЦикла;
		КонецЦикла;		
		
		ТаблицаПартий.Очистить();  
		
		ТЧДока = ТаблицаОбщихДанных;	
		
		ВыигравшийИгрок	= Участник1;
		НомерВ						= НомерУчастника1;
		ПроигравшийИгрок = Участник2;
		НомерП						= НомерУчастника2;
		//выделим строки жирным шрифтом
		МассивИгрока1 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ВыигравшийИгрок));
		Если МассивИгрока1.Количество() >0 Тогда
			МассивИгрока1[0]["ВыделениеСтроки"] = Истина;
			МассивИгрока1[0]["ВыделениеКолонки"+НомерП] = Истина;
		КонецЕсли;
		МассивИгрока2 = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",ПроигравшийИгрок));
		Если МассивИгрока2.Количество() >0 Тогда
			МассивИгрока2[0]["ВыделениеСтроки"] = Истина;
			МассивИгрока2[0]["ВыделениеКолонки"+НомерВ] = Истина;
		КонецЕсли;
		Если НомерВ = Неопределено Или НомерП = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		Если НомерВ < НомерП Тогда
			НовСтрока = ТаблицаПартий.Добавить();
			НовСтрока.Участник = ВыигравшийИгрок;
			НовСтрока.НомерУчастника = НомерВ;
			
			НовСтрока2 = ТаблицаПартий.Добавить();
			НовСтрока2.Участник = ПроигравшийИгрок;
			НовСтрока2.НомерУчастника = НомерП;
		Иначе
			НовСтрока2 = ТаблицаПартий.Добавить();
			НовСтрока2.Участник = ПроигравшийИгрок;
			НовСтрока2.НомерУчастника = НомерП;
			
			НовСтрока = ТаблицаПартий.Добавить();
			НовСтрока.Участник = ВыигравшийИгрок;
			НовСтрока.НомерУчастника = НомерВ;
		КонецЕсли;
				
		Если ТекСтрокаМониторинга.Очки1 = 0 И ТекСтрокаМониторинга.Очки2 = 0 Тогда
			НовСтрока.Итог = 0;
			НовСтрока2.Итог = 0;
			ТаблицаПартий.Сортировать("НомерУчастника ВОЗР");
			Возврат;
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",Число(НомГруппы));
		Отбор.Вставить("Выигравший",ВыигравшийИгрок);
		Отбор.Вставить("Проигравший",ПроигравшийИгрок);
		МассивОчков = ТЧДока.НайтиСтроки(Отбор);
		Если МассивОчков.Количество() = 0 Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("НомерТура",НомерТура);
			Отбор.Вставить("НомерГруппы",Число(НомГруппы));
			Отбор.Вставить("Выигравший",ПроигравшийИгрок);
			Отбор.Вставить("Проигравший",ВыигравшийИгрок);
			МассивОчков = ТЧДока.НайтиСтроки(Отбор);
		КонецЕсли; 
		
		Если МассивОчков.Количество() > 1 Тогда
			Для н  = 1 По МассивОчков.Количество() Цикл
				//посчитаем очки для выигравшего
				ТекОчки = МассивОчков[н-1].КолШаров;
				Если ТекОчки < 0 Тогда //это проигравшего
					Если ТекОчки <= -11 Тогда
						ЗначВторое = -ТекОчки +2;
					Иначе
						ЗначВторое = 11;
					КонецЕсли;
					НовСтрока2["Игра"+Н] 	= ЗначВторое;
					НовСтрока["Игра"+Н] 	= -ТекОчки;
				ИначеЕсли ТекОчки = 0 Тогда
					НовСтрока2["Игра"+Н]   = ТекОчки;
					НовСтрока["Игра"+Н] 	 = 11;
				ИначеЕсли ТекОчки >= 10 Тогда //это баланс
					НовСтрока2["Игра"+Н]   = ТекОчки;
					НовСтрока["Игра"+Н] 	 = ТекОчки+2;
				ИначеЕсли ТекОчки <= 11 И ТекОчки > 0 Тогда
					НовСтрока2["Игра"+Н] 	= ТекОчки;
					НовСтрока["Игра"+Н] 	= 11;
				ИначеЕсли ТекОчки >= 11 Тогда
					НовСтрока2["Игра"+Н]  = ТекОчки;
					НовСтрока["Игра"+Н] 	= ТекОчки+2;
				КонецЕсли;
			КонецЦикла;
			ПосчитатьИтогиПартийДляТаблицы(НомГруппы);
		ИначеЕсли МассивОчков.Количество() = 1 Тогда
			//это или техническое
			СтрокаМассива = МассивОчков[0];
			ТекОчки = СтрокаМассива.КолШаров;
			Если СтрокаМассива.ТехническоеВ Или СтрокаМассива.ТехническоеП Тогда
				НовСтрока.Техническое 	 = СтрокаМассива.ТехническоеВ;
				НовСтрока2.Техническое   = СтрокаМассива.ТехническоеП;
				ПосчитатьИтогиПартийДляТаблицы(НомГруппы);
				ТаблицаПартий.Сортировать("НомерУчастника");
				Возврат;
			КонецЕсли;
			//или вводили по партиям
			НовСтрока.Итог 		= СтрокаМассива.ОчкиВыигравшего;
			НовСтрока2.Итог 	= СтрокаМассива.ОчкиПроигравшего;
		КонецЕсли;
		
		//ТаблицаПартий.Сортировать("НомерУчастника");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Участник1) И ЗначениеЗаполнено(ТекСтрока.Участник2) Тогда
			СписокКоманд = ОбновитьКМБыстрогоВвода(ТекСтрока.Участник1,ТекСтрока.Участник2);
			ДанныеВыбора = СписокКоманд;
		КонецЕсли;			
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Данные = Новый Структура;
		Данные.Вставить("ЗначениеСписка",ВыбранноеЗначение);
		Данные.Вставить("СсылкаИгрок1",ТекСтрока.Участник1);
		Данные.Вставить("СсылкаИгрок2",ТекСтрока.Участник2);
		Данные.Вставить("НомерИгры",ТекСтрока.НомерИгры);
		ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные);
		Если ТекСтрока.НомерСтола <> 0 Тогда
			ДанныеДляВстреч = Новый Структура;
			ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
			ДанныеДляВстреч.Вставить("НомерСтола", ТекСтрока.НомерСтола);
			Клиентские.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч,Истина);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Участник1) И ЗначениеЗаполнено(ТекСтрока.Участник2) Тогда
			ДанныеВыбора = ОбновитьКМБыстрогоВвода(ТекСтрока.Участник2,ТекСтрока.Участник1);
		КонецЕсли;			
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Данные = Новый Структура;
		Данные.Вставить("ЗначениеСписка",ВыбранноеЗначение);
		Данные.Вставить("СсылкаИгрок1",ТекСтрока.Участник2);
		Данные.Вставить("СсылкаИгрок2",ТекСтрока.Участник1);
		Данные.Вставить("НомерИгры",ТекСтрока.НомерИгры);
		ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные);
		Если ТекСтрока.НомерСтола <> 0 Тогда
			ДанныеДляВстреч = Новый Структура;
			ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
			ДанныеДляВстреч.Вставить("НомерСтола", ТекСтрока.НомерСтола);
			Клиентские.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч,Истина);
		КонецЕсли; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ОбновитьКМБыстрогоВвода(парУчастник1,парУчастник2)
	
	мСписок = Новый СписокЗначений;
	Пробел10 = "          ";
	МаксимумПартий = ОпределитьКолПартий();
	//1 вариант
	Для М = 0 По МаксимумПартий-1 Цикл		
		мСписок.Добавить("1_"+М,Строка(парУчастник1)+" "+МаксимумПартий+":"+М+" "+Строка(парУчастник2)+Пробел10);
	КонецЦикла;
	мСписок.Добавить("1_W",Строка(парУчастник1)+" W/L "+Строка(парУчастник2)+Пробел10);
	мСписок.Добавить("9"," ");
	//2 вариант
	Для М = 0 По МаксимумПартий-1 Цикл
		мСписок.Добавить("2_"+М,Строка(парУчастник2)+" "+МаксимумПартий+":"+М+" "+Строка(парУчастник1)+Пробел10);
	КонецЦикла; 
	мСписок.Добавить("2_W",Строка(парУчастник2)+" W/L "+Строка(парУчастник1)+Пробел10);
	
	Возврат мСписок;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные)
	
	//разберем значение из списка
	//Y_X, где Y - номер участника, первый или второй по переданному параметру
	//X - количество партий выигранных
	//например: передаем в функция (Иванов, Петров)
	//1_2 Иванов 3:2 Петров
	//Иванов это 1 параметр
	//петров это 2 параметр
	//на выходе получаем, что Петров выиграл у Иванова 2 партии
	ВариантИзСписка	= Данные.ЗначениеСписка;//значение списка значений из контекстного меню
	СсылкаИгрок1			= Данные.СсылкаИгрок1;
	СсылкаИгрок2			= Данные.СсылкаИгрок2;
	
	ЗначениеВыбора 			= ВариантИзСписка;
	НомерПараметра 			= Число(Лев(ЗначениеВыбора,1));
	Если НомерПараметра = 9 Тогда
		Возврат;
	КонецЕсли; 
	КолВыигранныхПартий	= Прав(ЗначениеВыбора,1);
	Если НомерПараметра = 1 Тогда
		перемВыигравший 		= СсылкаИгрок1;
		перемПроигравший	= СсылкаИгрок2;
	Иначе
		перемВыигравший 		= СсылкаИгрок2;
		перемПроигравший	= СсылкаИгрок1;
	КонецЕсли;
	Если КолВыигранныхПартий = "W" Тогда
		ВИтог = ОпределитьКолПартий();
		ПИтог = 0;
		ВТехническое = Ложь;				
		ПТехническое = Истина;
	Иначе
		ВИтог = ОпределитьКолПартий();
		ПИтог = КолВыигранныхПартий;
		ВТехническое = Ложь;				
		ПТехническое = Ложь;
	КонецЕсли; 
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",перемВыигравший);
	Отбор.Вставить("Проигравший",перемПроигравший);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",глТекГруппа);
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",перемПроигравший);
		Отбор.Вставить("Проигравший",перемВыигравший);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",глТекГруппа);
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = глТекГруппа;
	НовСтрока.НомерСета = 1;
	НовСтрока.Выигравший  = перемВыигравший;
	НовСтрока.Проигравший = перемПроигравший;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ВИтог;
	НовСтрока.ОчкиПроигравшего= ПИтог;
	НовСтрока.ТехническоеВ = ВТехническое;
	НовСтрока.ТехническоеП = ПТехническое; 
	
	ТекСтрокаМониторинга = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрокаМониторинга <> Неопределено Тогда
		Если ТекСтрокаМониторинга.Участник1 = перемВыигравший Тогда
			ТекСтрокаМониторинга.Очки1 = ВИтог;
			ТекСтрокаМониторинга.Очки2 = ПИтог;
		Иначе
			ТекСтрокаМониторинга.Очки2 = ВИтог;
			ТекСтрокаМониторинга.Очки1 = ПИтог;
		КонецЕсли; 
		ТекСтрокаМониторинга.ТехническоеВ						= Ложь;
		ТекСтрокаМониторинга.ТехническоеП						= Ложь;
		ТекСтрокаМониторинга.НомерСтола							= 0;
		ТекСтрокаМониторинга.ВремяВызова						= Дата('00010101');
		ТекСтрокаМониторинга.ПрошлоСекунд						= 0;
		ТекСтрокаМониторинга.СколькоВремениПрошло	= "";
	КонецЕсли; 
	
	ВыполнитьПроцедурыПослеЗаписи(Данные.НомерИгры);
	
	СписокГруппПриАктивизацииСтроки(Элементы.СписокГрупп);
	
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроцедурыПослеЗаписи(мНомерИгры)
		
	ДанныеПоАдресам = ОбновитьАдресаТаблицНаСервере(ТаблицаОбщихДанных,ТаблицаГруппы,ЭтотОбъект.УникальныйИдентификатор);
	АдресОбщейТаблицыДанных		= ДанныеПоАдресам.АдресОбщейТаблицыДанных;
	АдресКопииТаблицыГрупп			= ДанныеПоАдресам.АдресКопииТаблицыГрупп;
	
	ОчиститьТаблицуМониторинга(глТекГруппа,мНомерИгры);
	
	//ОбновитьТаблицуМониторинга();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуМониторинга()
	
	//очистим все значения кроме, номера игры и приоритета вызова
	//Для каждого ТекСтр Из ТаблицаМониторинга Цикл
	//	Если ТекСтр.ВремяВызова <> Дата('00010101') Тогда
	//		Продолжить;	
	//	КонецЕсли; 		
	//	ТекСтр.Очки1										= 0;
	//	ТекСтр.Очки2										= 0;
	//	ТекСтр.ТехническоеВ						= Ложь;
	//	ТекСтр.ТехническоеП						= Ложь;
	//	ТекСтр.НомерСтола							= 0;
	//	ТекСтр.ВремяВызова						= Дата('00010101');
	//	ТекСтр.ПрошлоСекунд						= 0;
	//	ТекСтр.СколькоВремениПрошло	= "";
	//	ТекСтр.Участник1								= Справочники.Участники.ПустаяСсылка();
	//	ТекСтр.Участник2								= Справочники.Участники.ПустаяСсылка();
	//КонецЦикла; 
		
	////потом заполняем отсюда, для начальных игр будет заполнен счет
	////ВсяТаблицаОбщихДанных
	//мСводнаяТаблица = ПолучитьСводнуюТаблицаИзОбщей();
	////сначала заполним мониторинг
	//Для каждого СтрокаСводной Из мСводнаяТаблица Цикл
	//	ИскомыйНомер = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерИгры",СтрокаСводной.НомерИгры));
	//	Если ИскомыйНомер.Количество() > 0 Тогда
	//		СтрокаМониторинга = ИскомыйНомер[0];
	//		ЗаполнитьЗначенияСвойств(СтрокаМониторинга,СтрокаСводной);
	//	КонецЕсли;
	//КонецЦикла;
	////придется 2-мя циклами
	////а теперь проставим участников, кто одиночки
	////т.е. раскидаем уже сыгранные игры на другие номера игр
	//Для каждого СтрокаСводной Из мСводнаяТаблица Цикл
	//	//а теперь следующую игру
	//	//Если СтрокаСводной.ТехническоеВ Или СтрокаСводной.ТехническоеП Тогда
	//	//это техническое значит участник будет в поле участник1
	//	//парВыигравший 	= СтрокаСводной.Участник1;
	//	//парПроигравший	= СтрокаСводной.Участник2;
	//	//ТекРасшифровкаВыигравш = "Игра"+СтрокаСводной.НомерИгры;
	//	//ТекРасшифровкаПроигравш = "ИграМ"+СтрокаСводной.НомерИгры; //все равно он будет пустой
	//	//Иначе
	//	парВыигравший 	= СтрокаСводной.Участник1;
	//	парПроигравший	= СтрокаСводной.Участник2;
	//	ТекРасшифровкаВыигравш 		 = "Игра"+СтрокаСводной.НомерИгры;
	//	ТекРасшифровкаПроигравш		 = "ИграМ"+СтрокаСводной.НомерИгры;
	//	
	//	СледИграВыигравшего 	= НайтиНомерИгрыПоРасшифровке(ТекРасшифровкаВыигравш);
	//	СледИграПроигравшего 	= НайтиНомерИгрыПоРасшифровке(ТекРасшифровкаПроигравш);
	//	//теперь ищем эти игры в мониторинге и ставим участников в не заполненное место
	//	ИскомыйНомер = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерИгры",СледИграВыигравшего));
	//	Если ИскомыйНомер.Количество() > 0 Тогда
	//		СтрокаМониторингаВыигравшего = ИскомыйНомер[0];
	//		Если ЗначениеЗаполнено(СтрокаМониторингаВыигравшего.Очки1) или
	//			ЗначениеЗаполнено(СтрокаМониторингаВыигравшего.Очки2) Или
	//			СтрокаМониторингаВыигравшего.ТехническоеВ Или 
	//			СтрокаМониторингаВыигравшего.ТехническоеП Тогда
	//			//ничего ни делаем эта игра следующая уже сыграна
	//		Иначе	
	//			Если Не ЗначениеЗаполнено(СтрокаМониторингаВыигравшего.Участник1) Тогда
	//				СтрокаМониторингаВыигравшего.Участник1 = парВыигравший;	
	//			Иначе
	//				СтрокаМониторингаВыигравшего.Участник2	 = парВыигравший;
	//			КонецЕсли; 
	//		КонецЕсли;
	//	КонецЕсли;	
	//	ИскомыйНомер = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерИгры",СледИграПроигравшего));
	//	Если ИскомыйНомер.Количество() > 0 Тогда
	//		СтрокаМониторингаПроигравшего = ИскомыйНомер[0];
	//		Если ЗначениеЗаполнено(СтрокаМониторингаПроигравшего.Очки1) или
	//			ЗначениеЗаполнено(СтрокаМониторингаПроигравшего.Очки2) Или
	//			СтрокаМониторингаПроигравшего.ТехническоеВ Или 
	//			СтрокаМониторингаПроигравшего.ТехническоеП Тогда
	//			//ничего ни делаем эта игра следующая уже сыграна
	//		Иначе	
	//			Если Не ЗначениеЗаполнено(СтрокаМониторингаПроигравшего.Участник1) Тогда
	//				СтрокаМониторингаПроигравшего.Участник1 = парПроигравший;	
	//			Иначе
	//				СтрокаМониторингаПроигравшего.Участник2 = парПроигравший;
	//			КонецЕсли; 
	//		КонецЕсли;
	//	КонецЕсли;	
	//КонецЦикла; 
	////обновим рейтинг
	//Для каждого ТекСтрМониторинга Из ТаблицаМониторинга Цикл
	//	Если ЗначениеЗаполнено(ТекСтрМониторинга.Участник1) Тогда
	//		СтрокиСРейтингом1 = СсылкаНаДок.СписокУчастников.НайтиСтроки(Новый Структура("Участник",ТекСтрМониторинга.Участник1));
	//		Если СтрокиСРейтингом1.Количество() > 0 Тогда
	//			ТекСтрМониторинга.Рейтинг1 =СтрокиСРейтингом1[0].ТекущийРейтинг;			
	//		КонецЕсли; 
	//	КонецЕсли; 
	//	Если ЗначениеЗаполнено(ТекСтрМониторинга.Участник2) Тогда
	//		СтрокиСРейтингом2 = СсылкаНаДок.СписокУчастников.НайтиСтроки(Новый Структура("Участник",ТекСтрМониторинга.Участник2));
	//		Если СтрокиСРейтингом2.Количество() > 0 Тогда
	//			ТекСтрМониторинга.Рейтинг2 =СтрокиСРейтингом2[0].ТекущийРейтинг;			
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;	
КонецПроцедуры

#Область Активность_Столов

&НаСервере
Процедура ВывестиАктивностьСтолов()
	
	Если СсылкаНаСоревнование.КолСтолов > 0 Тогда
		
		КолПоГоризонтали = Константы.КоличествоСтоловПоГоризонтали.Получить();
		Если КолПоГоризонтали = 0 Тогда
			КолПоГоризонтали = 5;
		КонецЕсли; 
		
		АктивностьСтолов.Очистить();
		
		Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("МониторСтолов");
		
		КопияУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура),"НомерСтроки,Участник,НомерГруппы");
		СчУч = 1;
		СчГр = 1;
		Для Каждого ТекСтр Из КопияУчастников Цикл
			Если ТекСтр.НомерГруппы = СчГр Тогда
				ТекСтр.НомерСтроки = СчУч;
				СчУч = СчУч +1;
			Иначе
				СчГр = ТекСтр.НомерГруппы;
				СчУч = 1;
				ТекСтр.НомерСтроки = СчУч;
				СчУч = СчУч +1;
			КонецЕсли; 
		КонецЦикла; 
		
		пСчСтолов = 0;
		Для мСтол = 1 По КолСтолов Цикл
			
			пСчСтолов = пСчСтолов + 1;
			ИскомаяИграВМониторинге = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерСтола",мСтол));
			
			ОбластьСтола = Макет.ПолучитьОбласть("ГоризонтальСтол | ВертикальСтол");
			ОбластьСтола.Параметры.НомерСтола		= мСтол;
			
			Если ИскомаяИграВМониторинге.Количество() > 0 Тогда// игра есть
				ОбластьСтола.Параметры.НомерГруппы	= "Гр. № "+ИскомаяИграВМониторинге[0].НомерГруппы;
				
				мПар1 	= КопияУчастников.Найти(ИскомаяИграВМониторинге[0].Участник1).НомерСтроки;
				мПар2	= КопияУчастников.Найти(ИскомаяИграВМониторинге[0].Участник2).НомерСтроки;
				
				Если мПар2 > мПар1 Тогда
					ОбластьСтола.Параметры.НомерУч1			= мПар1;
					ОбластьСтола.Параметры.Участник1			= Общий.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник1.Наименование);
					ОбластьСтола.Параметры.НомерУч2			= мПар2;
					ОбластьСтола.Параметры.Участник2			= Общий.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник2.Наименование);
				Иначе
					ОбластьСтола.Параметры.НомерУч1			= мПар2;
					ОбластьСтола.Параметры.Участник1			= Общий.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник2.Наименование);
					ОбластьСтола.Параметры.НомерУч2			= мПар1;
					ОбластьСтола.Параметры.Участник2			= Общий.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник1.Наименование);
				КонецЕсли; 
			КонецЕсли; 
			
			Если пСчСтолов = КолПоГоризонтали Тогда
				АктивностьСтолов.Присоединить(ОбластьСтола);
				пСчСтолов = 0;
			Иначе
				Если пСчСтолов = 1 Тогда
					АктивностьСтолов.Вывести(ОбластьСтола);
				Иначе
					АктивностьСтолов.Присоединить(ОбластьСтола);
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры


#КонецОбласти 