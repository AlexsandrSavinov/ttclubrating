
Процедура ОтправитьВоВконтакте(ИсточникВызова) Экспорт
	
	СписокФорматов = Новый СписокЗначений;
	СписокФорматов.Добавить("XLSX","Excel (*.xlsx)",,БиблиотекаКартинок.ИконкаExcel);
	СписокФорматов.Добавить("PDF","Документ PDF (*.pdf)",,БиблиотекаКартинок.ИконкаPDF);
	СписокФорматов.Добавить("HTML","Изображение (*.png)",,БиблиотекаКартинок.ИконкаPNG);
	
	ПоследнийВариант = РаботаСВКСервер.ПолучитьПоследнийВариантРазмещенияВВК();
	Если ПоследнийВариант <> Неопределено Тогда
		ЭлементСписка = СписокФорматов.НайтиПоЗначению(ПоследнийВариант);
	Иначе
		ЭлементСписка = СписокФорматов[0];
	КонецЕсли; 
	
	СписокФорматов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ПослеВыбораФормата",РаботаСВККлиент,ИсточникВызова),"Выберите формат размещения",ЭлементСписка);
	
КонецПроцедуры

Процедура ПослеВыбораФормата(ВыбранныйЭлемент,ДопПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ИсточникВызова = ДопПараметры;
		РаботаСВКСервер.СохранитьВариантРазмещенияВВК(ВыбранныйЭлемент.Значение);
		Если ИсточникВызова.ИмяФормы = "ОбщаяФорма.ФормаВыводаНаПечать" Тогда
			ТабДок = ИсточникВызова.ТабДок;
		Иначе 
			ТабДок = ИсточникВызова.Результат;
			ТабДок.АвтоМасштаб = Истина;
		КонецЕсли; 	
		ИмяВтФайла = ПолучитьИмяВременногоФайла(ВыбранныйЭлемент.Значение);
		
		ПараметрыДляПослеЗаписиФайла = Новый Структура;
		ПараметрыДляПослеЗаписиФайла.Вставить("Источник",ИсточникВызова);
		ПараметрыДляПослеЗаписиФайла.Вставить("втИмяФайла",ИмяВтФайла);
		ПараметрыДляПослеЗаписиФайла.Вставить("Формат",ВыбранныйЭлемент.Значение);
		ТабДок.НачатьЗапись(Новый ОписаниеОповещения("ПослеЗаписиФайла",РаботаСВККлиент,ПараметрыДляПослеЗаписиФайла),ИмяВтФайла,ТипФайлаТабличногоДокумента[ВыбранныйЭлемент.Значение]);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПослеЗаписиФайла(Результат,ДопПараметры) Экспорт
	
	Если Результат Тогда
						
		Если ДопПараметры.Формат = "HTML" Тогда //надо переконвертировать в png
			ПараметрыДляСохранения = Серверные.ДанныеКПрограммеДляСохраненияВPNG();
			Если Не ЗначениеЗаполнено(ПараметрыДляСохранения.ПутьКПрограмме) Тогда
				ПоказатьПредупреждение(Новый ОписаниеОповещения("ПослеПоказаПредупреждения",ЭтотОбъект),"Нужно заполнить путь к программе wkhtmltoimage");
			Иначе
				втФайлPNG = ПолучитьИмяВременногоФайла("png");
				Кавычка = Символ(34);
				СтрокаКонвертирования = Кавычка+ПараметрыДляСохранения.ПутьКПрограмме + Кавычка + " "+ДопПараметры.втИмяФайла+" "+Кавычка+втФайлPNG+Кавычка;
				ДопПараметры.Вставить("СтрокаКонвертирования", СтрокаКонвертирования);
				ДопПараметры.Вставить("ФайлКартинки", втФайлPNG);
				КонвертироватьHTMLвPNG(ДопПараметры);
			КонецЕсли; 
		Иначе
			ОтправитьДокументыВоВконтакте(ДопПараметры.Источник,ДопПараметры.втИмяФайла,ДопПараметры.Формат);
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры

Процедура КонвертироватьHTMLвPNG(ПараметрыДляОтправки)
	
	НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапускаПриложенияКонвертирования",РаботаСВККлиент,ПараметрыДляОтправки),ПараметрыДляОтправки.СтрокаКонвертирования,,Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//
// Процедура 
//
// Описание:
//
// Параметры:
// ИсточникВызова - УправляемаяФорма - откуда вызвана команда
// ПутьКФайлу - Строка - конечный путь к отправляемому файлу
// парФормат - Строка - форма файла для загрузки xlsx,pdf,png.
Процедура ОтправитьДокументыВоВконтакте(ИсточникВызова,ПутьКФайлу,парФормат)
	
	//https://api.vk.com/method/METHOD_NAME?PARAMETERS&access_token=ACCESS_TOKEN&v=V
	//Он состоит из нескольких частей:
	//
	//METHOD_NAME (обязательно) — название метода API, к которому Вы хотите обратиться. Полный список методов доступен на этой странице. Обратите внимание: имя метода чувствительно к регистру.
	//PARAMETERS (опционально) — входные параметры соответствующего метода API, последовательность пар name=value, разделенных амперсандом. Список параметров указан на странице с описанием метода.
	//ACCESS_TOKEN (обязательно) — ключ доступа. Подробнее о получении токена Вы можете узнать в этом руководстве.
	//V (обязательно) — используемая версия API. Использование этого параметра применяет некоторые изменения в формате ответа различных методов. На текущий момент актуальная версия API — 5.92. Этот параметр следует передавать со всеми запросами.
	
	ВерсияАпи = "5.92";

	Если ИсточникВызова.ИмяФормы = "ОбщаяФорма.ФормаВыводаНаПечать" Тогда
		Если ЗначениеЗаполнено(ИсточникВызова.СсылкаНаДокумент) Тогда
			СсылкаНаДокумент = ИсточникВызова.СсылкаНаДокумент;
		Иначе
			СсылкаНаДокумент = Неопределено;
		КонецЕсли; 
	Иначе 
		СсылкаНаДокумент = Неопределено;
	КонецЕсли; 	
	
	ПодготовленныеДанные = Серверные.ПодготовитьДанныеДляОтправкиВВК(СсылкаНаДокумент);
	
	Токен = ПодготовленныеДанные.Токен;
	АктивныеПубликации 	= ПодготовленныеДанные.АктивныеЗаписи;
	Если СтрНайти(ИсточникВызова.ИмяФормы,"Отчет") > 0 Тогда
		ЗаголовокДокумента 	= ИсточникВызова.Окно.Заголовок + " от "+ТекущаяДата();
	Иначе
		ЗаголовокДокумента	= ПодготовленныеДанные.Заголовок
	КонецЕсли; 
	
	Если АктивныеПубликации.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет активных записей для размещения документов.";
		Сообщение.Сообщить(); 
		//можно удалить файл
		НачатьУдалениеФайлов(Новый ОписаниеОповещения("ПослеУдаленияФайлов",РаботаСВККлиент),ПутьКФайлу);
		Возврат;
	КонецЕсли; 
	
	СоединениеОсновное = Новый HTTPСоединение("api.vk.com",,,,,,Новый ЗащищенноеСоединениеOpenSSL);
	Если парФормат = "HTML" Тогда
		парФормат = "PNG";
	КонецЕсли;
	Для Каждого ТекЗапись Из АктивныеПубликации Цикл
		
		ФорматированныйИД = Формат(ТекЗапись.ИД,"ЧГ=0");
		ЭтоПубликацияГруппы = Ложь;
		Если ТекЗапись.ТипПубликации = ПредопределенноеЗначение("Перечисление.ТипПубликации.Группа") Тогда
			ЭтоПубликацияГруппы = Истина;
		КонецЕсли; 
		
		//docs.getUploadServer
		//1 получение адреса для загрузки файла       //group_id
		Если ЭтоПубликацияГруппы Тогда
			СтрокаЗапросаДок = Новый HTTPЗапрос("/method/docs.getWallUploadServer?group_id="+ФорматированныйИД+"&access_token="+Токен+"&v="+ВерсияАпи+"");
		Иначе
			СтрокаЗапросаДок = Новый HTTPЗапрос("/method/docs.getWallUploadServer?access_token="+Токен+"&v="+ВерсияАпи+"");
		КонецЕсли; 
		
		Ответ = СоединениеОсновное.Получить(СтрокаЗапросаДок);
		
		СтруктураДанных = Клиентские.СформироватьОтветHTTPВСтруктура(Ответ);	//считывание в структуру			
		
		Если Ответ.КодСостояния = 200 Тогда
			Если СтруктураДанных.Свойство("response") Тогда
				АдресДляЗагрузкиФайла = СтруктураДанных.response.upload_url;		
				
				//2 загружаем документ на сервер вк
				СтруктураАдреса = Клиентские.СтруктураURI(АдресДляЗагрузкиФайла);
				Boundary  = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
				
				Тело         = Новый ПотокВПамяти();
				ЗаписьДанных = Новый ЗаписьДанных(Тело,КодировкаТекста.ANSI);
				ЗаписьДанных.ЗаписатьСтроку("--"+Boundary);
				ЗаписьДанных.ЗаписатьСтроку("Content-Disposition: form-data; name=""file""; filename=""doc."+парФормат+"""");
				ЗаписьДанных.ЗаписатьСтроку("");
				ЗаписьДанных.Записать(Новый ДвоичныеДанные(ПутьКФайлу));
				ЗаписьДанных.ЗаписатьСтроку("");
				ЗаписьДанных.ЗаписатьСтроку("--"+Boundary);
				
				ДвоичныеДанныеДляОтправки = Тело.ЗакрытьИПолучитьДвоичныеДанные();
				
				ЗаголовокHTTP = Новый Соответствие;
				ЗаголовокHTTP.Вставить("Content-Type", "multipart/form-data; boundary="+Boundary);
				ЗаголовокHTTP.Вставить("Content-Length", XMLСтрока(ДвоичныеДанныеДляОтправки.Размер()));
				
				НТТР = Новый HTTPСоединение(СтруктураАдреса.ИмяСервера+"/"+СтруктураАдреса.ПутьНаСервере,,,,,,Новый ЗащищенноеСоединениеOpenSSL);
				
				ЗапросHTTP      = Новый HTTPЗапрос("",ЗаголовокHTTP);
				ЗапросHTTP.УстановитьТелоИзДвоичныхДанных(ДвоичныеДанныеДляОтправки);
				
				ОтветHTTP       = НТТР.ОтправитьДляОбработки(ЗапросHTTP);
				ПараметрыОтвета = Клиентские.СформироватьОтветHTTPВСтруктура(ОтветHTTP);
				
				Если ПараметрыОтвета.Свойство("file") Тогда
					//3 сохраняем документ на стене
					ЗапросНаСохранение = Новый HTTPЗапрос("/method/docs.save?file="+ПараметрыОтвета.file+"&title="+ЗаголовокДокумента+"&access_token="+Токен+"&v="+ВерсияАпи+"");
					ОтветНаЗапрос = СоединениеОсновное.Получить(ЗапросНаСохранение);
					
					РезультатПубликации = Клиентские.СформироватьОтветHTTPВСтруктура(ОтветНаЗапрос);
					
					Если РезультатПубликации.Свойство("response") Тогда
						//<type><owner_id>_<media_id>,<type><owner_id>_<media_id>
						Аттач = РезультатПубликации.response.type+Формат(РезультатПубликации.response.doc.owner_id,"ЧГ=0")+"_"+Формат(РезультатПубликации.response.doc.id,"ЧГ=0");
						//https://api.vk.com/method/wall.post?owner_id=13072&message=Соревнование&attachments=&access_token="+Токен+"&v=5.92"
						Если ЭтоПубликацияГруппы Тогда
							СтрокаЗапроса = Новый HTTPЗапрос("/method/wall.post?owner_id=-"+ФорматированныйИД+"&message="+ЗаголовокДокумента+"&attachments="+Аттач+"&access_token="+Токен+"&v="+ВерсияАпи+"");
						Иначе
							СтрокаЗапроса = Новый HTTPЗапрос("/method/wall.post?owner_id="+ФорматированныйИД+"&message="+ЗаголовокДокумента+"&attachments="+Аттач+"&access_token="+Токен+"&v="+ВерсияАпи+"");
						КонецЕсли; 
						ОтветНаРазмещениеЗаписи = СоединениеОсновное.Получить(СтрокаЗапроса);
						
						РезультатОтправки = Клиентские.СформироватьОтветHTTPВСтруктура(ОтветНаРазмещениеЗаписи);
						
						Если РезультатОтправки.Свойство("response") Тогда
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = "Запись успешно размещена у "+ФорматированныйИД;
							Сообщение.Сообщить();
						Иначе
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = "Ошибка: "+РезультатОтправки.КодСостояния + Символы.ПС + РезультатОтправки.ПолучитьТелоКакСтроку();
							Сообщение.Сообщить(); 
						КонецЕсли; 
						//можно удалить файл
						НачатьУдалениеФайлов(Новый ОписаниеОповещения("ПослеУдаленияФайлов",РаботаСВККлиент),ПутьКФайлу);
					КонецЕсли; 
				КонецЕсли;
			ИначеЕсли СтруктураДанных.Свойство("error") Тогда 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Ошибка: "+Ответ.КодСостояния + Символы.ПС + Ответ.ПолучитьТелоКакСтроку();
				Сообщение.Сообщить(); 
			КонецЕсли; 
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка: "+СтруктураДанных.error.error_code + Символы.ПС + СтруктураДанных.error.error_msg;
			Сообщение.Сообщить(); 
		КонецЕсли; 			
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПослеЗапускаПриложенияКонвертирования(КодВозврата,ДопПараметры) Экспорт
	
	ОтправитьДокументыВоВконтакте(ДопПараметры.Источник,ДопПараметры.ФайлКартинки,ДопПараметры.Формат);
	
КонецПроцедуры

Процедура ПослеУдаленияФайлов(ДопПараметры) Экспорт
	
КонецПроцедуры
 
Процедура ПослеПоказаПредупреждения(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры
